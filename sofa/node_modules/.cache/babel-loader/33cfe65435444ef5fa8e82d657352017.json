{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/FolderPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport Tagcard from \"../components/Tagcard/Tagcard\";\nimport \"../components/Layout/main-layout.css\";\nconst FolderPage = ({\n  bookmarks,\n  onAddBookmark,\n  onDeleteBookmark\n}) => {\n  const [folderName, setFolderName] = useState(\"\"); //폴더명\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [sortingOption, setSortingOption] = useState(\"\");\n  // const [selectedTags, setSelectedTags] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const sortingOpt = [\"최근 저장\", \"오래된 저장\", \"이름순\"];\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"];\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // 폴더명 API 받아오기\n        const folderNameData = {\n          label: \"폴더명\"\n        };\n        setFolderName(folderNameData.label);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handleDelete = id => onDeleteBookmark(id);\n  const handleEdit = id => {\n    //추후 수정 기능 코드 추가\n  };\n\n  // TAG\n  // const handleTagSelect = (tag) => {\n  //   if (!selectedTags.includes(tag)) {\n  //     setSelectedTags([...selectedTags, tag]); //태그 추가\n  //   }\n  // };\n  // const handleTagRemove = (tag) => {\n  //   setSelectedTags(selectedTags.filter((t) => t !== tag)); //태그 제거\n  // };\n\n  // SORTING\n  const handleSortingSelect = option => {\n    setSortingOption(option);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `main-page ${isMenuOpen ? \"menu-open\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    toggleMenu: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SideMenu, {\n    isOpen: isMenuOpen,\n    toggleMenu: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, folderName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selected-tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sorting-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"sorting\",\n    options: sortingOpt,\n    onSelect: handleSortingSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"sorting\",\n    options: sortingDirOpt,\n    onSelect: handleSortingSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ShowLinkCard, {\n    bookmarks: bookmarks,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    sortingOption: sortingOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n};\nexport default FolderPage;","map":{"version":3,"names":["React","useState","useEffect","Header","SideMenu","ShowLinkCard","Dropdown","Tagcard","FolderPage","bookmarks","onAddBookmark","onDeleteBookmark","folderName","setFolderName","loading","setLoading","sortingOption","setSortingOption","isMenuOpen","setIsMenuOpen","sortingOpt","sortingDirOpt","toggleMenu","fetchUserInfo","folderNameData","label","error","console","handleDelete","id","handleEdit","handleSortingSelect","option","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","options","onSelect","onDelete","onEdit"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/FolderPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport Tagcard from \"../components/Tagcard/Tagcard\";\n\nimport \"../components/Layout/main-layout.css\";\n\nconst FolderPage = ({ bookmarks, onAddBookmark, onDeleteBookmark }) => {\n  const [folderName, setFolderName] = useState(\"\"); //폴더명\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [sortingOption, setSortingOption] = useState(\"\");\n  // const [selectedTags, setSelectedTags] = useState([]);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const sortingOpt = [\"최근 저장\", \"오래된 저장\", \"이름순\"];\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"];\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // 폴더명 API 받아오기\n        const folderNameData = { label: \"폴더명\" };\n        setFolderName(folderNameData.label);\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n  const handleEdit = (id) => {\n    //추후 수정 기능 코드 추가\n  };\n\n  // TAG\n  // const handleTagSelect = (tag) => {\n  //   if (!selectedTags.includes(tag)) {\n  //     setSelectedTags([...selectedTags, tag]); //태그 추가\n  //   }\n  // };\n  // const handleTagRemove = (tag) => {\n  //   setSelectedTags(selectedTags.filter((t) => t !== tag)); //태그 제거\n  // };\n\n  // SORTING\n  const handleSortingSelect = (option) => {\n    setSortingOption(option);\n  };\n\n  return (\n    <div className={`main-page ${isMenuOpen ? \"menu-open\" : \"\"}`}>\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section>\n        <h3>{folderName}</h3>\n        <div className=\"selected-tags\"></div>\n\n        <div className=\"sorting-options\">\n          <Dropdown\n            className=\"sorting\"\n            options={sortingOpt}\n            onSelect={handleSortingSelect}\n          />\n          <Dropdown\n            className=\"sorting\"\n            options={sortingDirOpt}\n            onSelect={handleSortingSelect}\n          />\n        </div>\n\n        <ShowLinkCard\n          bookmarks={bookmarks}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n          sortingOption={sortingOption}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default FolderPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}