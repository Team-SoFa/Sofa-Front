{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport { setFolderList, addFolder } from \"../redux/actions/folderActions\"; // 폴더 관련 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost } from \"../services/folderService\"; // 폴더 서비스 호출\n\nconst ImagePlaceholder = ({\n  width,\n  height\n}) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-placeholder\",\n    style: placeholderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC790\\uB9AC \\uD45C\\uC2DC\\uC9C0\");\n};\nconst SignPage = () => {\n  const dispatch = useDispatch(); // dispatch 사용\n  const {\n    accessToken,\n    refreshToken\n  } = useSelector(state => state.auth); // Redux 상태에서 토큰 가져오기\n  const folderList = useSelector(state => state.folder.folderList); // 폴더 목록 가져오기\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      };\n      const response = await tempLogin(headers); // tempLogin 호출\n\n      console.log('Google Login Response:', response); // 응답을 제대로 확인\n\n      // 응답에서 accessToken, refreshToken 추출\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken)); // 토큰 저장\n        console.log('로그인 성공!'); // 성공 메시지 설정\n      } else {\n        console.log('로그인 응답에 문제가 있습니다.'); // 응답이 없거나 이상할 때 처리\n      }\n    } catch (err) {\n      console.log('Login Error:', err);\n    } finally {\n      console.log('로딩 종료'); // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 조회\n  const handleFolderGet = async () => {\n    try {\n      const response = await folderGet();\n      console.log('폴더 조회 결과:', response);\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList)); // Redux에 폴더 리스트 저장\n      }\n    } catch (err) {\n      console.log('폴더 조회 실패:', err);\n    }\n  };\n\n  // 폴더 추가\n  const handleFolderPost = async () => {\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"새 폴더\")\n      };\n      const response = await folderPost(headers);\n      console.log('폴더 추가 결과:', response);\n      if (response) {\n        dispatch(addFolder(response)); // Redux에 새 폴더 추가\n      }\n    } catch (err) {\n      console.log('폴더 추가 실패:', err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"example.png\",\n    alt: \"logo\",\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"sign-main-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImagePlaceholder, {\n    width: 362,\n    height: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sign-slogan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uBA54\\uC778 \\uC2AC\\uB85C\\uAC74 \\uCF54\\uBA58\\uD2B8\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC11C\\uBE0C \\uC2AC\\uB85C\\uAC74 \\uBC0F \\uAE30\\uD0C0 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-text-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Google \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\",\n    onClick: handleGoogleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uCD94\\uAC00\",\n    onClick: handleFolderPost // 폴더 추가 버튼\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC870\\uD68C\",\n    onClick: handleFolderGet // 폴더 조회 버튼\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"folder-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"\\uD3F4\\uB354 \\uBAA9\\uB85D\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, folderList && folderList.map(folder => /*#__PURE__*/React.createElement(\"li\", {\n    key: folder.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, folder.name || '이름 없음')))))));\n};\nexport default SignPage;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setTokens","setFolderList","addFolder","Button","tempLogin","folderGet","folderPost","ImagePlaceholder","width","height","placeholderStyle","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SignPage","dispatch","accessToken","refreshToken","state","auth","folderList","folder","handleGoogleLogin","headers","encodeURIComponent","response","console","log","err","handleFolderGet","floderList","handleFolderPost","src","alt","onClick","window","location","reload","label","map","key","id","name"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";  // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport { setFolderList, addFolder } from \"../redux/actions/folderActions\"; // 폴더 관련 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost } from \"../services/folderService\"; // 폴더 서비스 호출\n\nconst ImagePlaceholder = ({ width, height }) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div className=\"image-placeholder\" style={placeholderStyle}>\n      이미지 자리 표시지\n    </div>\n  );\n};\n\nconst SignPage = () => {\n  const dispatch = useDispatch();  // dispatch 사용\n  const { accessToken, refreshToken } = useSelector((state) => state.auth);  // Redux 상태에서 토큰 가져오기\n  const folderList = useSelector((state) => state.folder.folderList);  // 폴더 목록 가져오기\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      };\n      const response = await tempLogin(headers);  // tempLogin 호출\n  \n      console.log('Google Login Response:', response);  // 응답을 제대로 확인\n  \n      // 응답에서 accessToken, refreshToken 추출\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken)); // 토큰 저장\n        console.log('로그인 성공!');  // 성공 메시지 설정\n      } else {\n        console.log('로그인 응답에 문제가 있습니다.');  // 응답이 없거나 이상할 때 처리\n      }\n    } catch (err) {\n      console.log('Login Error:', err);\n    } finally {\n      console.log('로딩 종료');  // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 조회\n  const handleFolderGet = async () => {\n    try {\n      const response = await folderGet();\n      console.log('폴더 조회 결과:', response);\n      \n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList));  // Redux에 폴더 리스트 저장\n      }\n    } catch (err) {\n      console.log('폴더 조회 실패:', err);\n    }\n  };\n\n  // 폴더 추가\n  const handleFolderPost = async () => {\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"새 폴더\")\n      };\n      const response = await folderPost(headers);\n      console.log('폴더 추가 결과:', response);\n      \n      if (response) {\n        dispatch(addFolder(response));  // Redux에 새 폴더 추가\n      }\n    } catch (err) {\n      console.log('폴더 추가 실패:', err);\n    }\n  };\n\n  return (\n    <div className=\"signpage\">\n      <header className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"example.png\"\n          alt=\"logo\"\n          onClick={() => window.location.reload()}\n        />\n      </header>\n      <main className=\"sign-main-style\">\n        <div className=\"image-section\">\n          <ImagePlaceholder width={362} height={320} />\n        </div>\n        <div className=\"text-section\">\n          <h1 className=\"sign-slogan\">서비스 메인 슬로건 코멘트</h1>\n          <p>서비스 서브 슬로건 및 기타 설명</p>\n          <div className=\"sign-text-button-wrapper\">\n            <Button\n              label=\"Google 계정으로 로그인\"\n              onClick={handleGoogleLogin} \n            />\n            <Button\n              label=\"폴더추가\"\n              onClick={handleFolderPost}  // 폴더 추가 버튼\n            />\n            <Button\n              label=\"폴더조회\"\n              onClick={handleFolderGet}  // 폴더 조회 버튼\n            />\n          </div>\n\n          {/* 폴더 목록을 화면에 표시 */}\n          <div className=\"folder-list\">\n            <h2>폴더 목록</h2>\n            <ul>\n              {folderList && folderList.map((folder) => (\n                <li key={folder.id}>\n                  {folder.name || '이름 없음'}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}