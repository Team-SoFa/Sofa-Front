{"ast":null,"code":"import React,{useState,useRef}from\"react\";import\"./Dropdown.css\";import{OutsideClick}from\"../OutsideClick\";import Button from\"../Button/Button\";const Dropdown=_ref=>{let{className,Icon,options,label,onSelect,onDelete,onMouseEnter,onMouseLeave}=_ref;const dropdownRef=useRef(null);//드롭다운 요소 참조를 위한 ref 생성\nconst[isOpen,setIsOpen]=OutsideClick(dropdownRef,false);//OutsideClick 사용\nconst[selectedValue,setSelectedValue]=useState(null);//선택된 값 상태 관리\nconst handleSelect=value=>{// className이 \"alarm\"일 때 label을 변경하지 않음\nif(className!==\"alarm\"){setSelectedValue(value.content===\"폴더 전체\"?{label:\"폴더 전체\"}:value);}setIsOpen(false);// 드롭다운 닫기\nonSelect(value);};const toggleDropdown=()=>{//드롭다운 토글 함수\nsetIsOpen(!isOpen);};return/*#__PURE__*/React.createElement(\"div\",{className:`dropdown ${className}`,ref:dropdownRef,onMouseEnter:onMouseEnter,onMouseLeave:onMouseLeave},/*#__PURE__*/React.createElement(\"div\",{className:`dropdown-header ${isOpen?\"open\":\"\"}`,onClick:toggleDropdown},Icon&&/*#__PURE__*/React.createElement(\"span\",{className:\"dropdown-header-img\",\"aria-label\":\"Dropdown Img\"},/*#__PURE__*/React.createElement(Icon,null)),selectedValue?selectedValue.label:/*#__PURE__*/React.createElement(\"span\",{className:\"dropdown-placeholder\"},label),className===\"alarm\"&&(options===null||options===void 0?void 0:options.length)>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"dropdown-badge\"})),(isOpen||className===\"search-dropdown\")&&/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-menu\"},[...(className===\"dropdown-folder-select\"// className 조건 추가\n?[{content:label,img:null}]:[]),...options].map((option,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"dropdown-option\",onClick:()=>handleSelect(option)},option.img&&/*#__PURE__*/React.createElement(\"img\",{src:option.img,alt:\"\",className:\"dropdown-option-img\"}),/*#__PURE__*/React.createElement(\"span\",{onClick:()=>handleSelect(option.content)},option.content),/*#__PURE__*/React.createElement(Button,{className:\"dropdown-select\",label:\"\\uC120\\uD0DD\"}),onDelete&&/*#__PURE__*/React.createElement(Button,{className:\"dropdown-delete\",label:\"\\u2715\",onClick:e=>{e.stopPropagation();onDelete(option.content);}})))));};export default Dropdown;","map":{"version":3,"names":["React","useState","useRef","OutsideClick","Button","Dropdown","_ref","className","Icon","options","label","onSelect","onDelete","onMouseEnter","onMouseLeave","dropdownRef","isOpen","setIsOpen","selectedValue","setSelectedValue","handleSelect","value","content","toggleDropdown","createElement","ref","onClick","length","img","map","option","index","key","src","alt","e","stopPropagation"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/components/Dropdown/Dropdown.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./Dropdown.css\";\nimport { OutsideClick } from \"../OutsideClick\";\nimport Button from \"../Button/Button\";\n\nconst Dropdown = ({\n  className,\n  Icon,\n  options,\n  label,\n  onSelect,\n  onDelete,\n  onMouseEnter,\n  onMouseLeave,\n}) => {\n  const dropdownRef = useRef(null); //드롭다운 요소 참조를 위한 ref 생성\n  const [isOpen, setIsOpen] = OutsideClick(dropdownRef, false); //OutsideClick 사용\n  const [selectedValue, setSelectedValue] = useState(null); //선택된 값 상태 관리\n\n  const handleSelect = (value) => {\n    // className이 \"alarm\"일 때 label을 변경하지 않음\n    if (className !== \"alarm\") {\n      setSelectedValue(\n        value.content === \"폴더 전체\" ? { label: \"폴더 전체\" } : value\n      );\n    }\n    setIsOpen(false); // 드롭다운 닫기\n    onSelect(value);\n  };\n  const toggleDropdown = () => {\n    //드롭다운 토글 함수\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div\n      className={`dropdown ${className}`}\n      ref={dropdownRef}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      <div\n        className={`dropdown-header ${isOpen ? \"open\" : \"\"}`}\n        onClick={toggleDropdown}\n      >\n        {Icon && (\n          <span className=\"dropdown-header-img\" aria-label=\"Dropdown Img\">\n            <Icon />\n          </span>\n        )}\n        {selectedValue ? (\n          selectedValue.label\n        ) : (\n          <span className=\"dropdown-placeholder\">{label}</span>\n        )}\n        {className === \"alarm\" && options?.length > 0 && (\n          <span className=\"dropdown-badge\"></span>\n        )}\n      </div>\n\n      {(isOpen || className === \"search-dropdown\") && (\n        <div className=\"dropdown-menu\">\n          {[\n            ...(className === \"dropdown-folder-select\" // className 조건 추가\n              ? [{ content: label, img: null }]\n              : []),\n            ...options,\n          ].map((option, index) => (\n            <div\n              key={index}\n              className=\"dropdown-option\"\n              onClick={() => handleSelect(option)}\n            >\n              {option.img && (\n                <img src={option.img} alt=\"\" className=\"dropdown-option-img\" />\n              )}\n              <span onClick={() => handleSelect(option.content)}>\n                {option.content}\n              </span>\n              <Button className=\"dropdown-select\" label=\"선택\" />\n\n              {onDelete && (\n                <Button\n                  className=\"dropdown-delete\"\n                  label=\"✕\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDelete(option.content);\n                  }}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}