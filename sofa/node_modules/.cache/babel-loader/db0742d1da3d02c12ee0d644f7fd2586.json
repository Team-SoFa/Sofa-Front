{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js\";\n// src/pages/SignPage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport { setFolderList } from \"../redux/actions/folderActions\"; // 폴더 관련 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost, folderDelete } from \"../services/folderService\";\nconst ImagePlaceholder = ({\n  width,\n  height\n}) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-placeholder\",\n    style: placeholderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC790\\uB9AC \\uD45C\\uC2DC\\uC9C0\");\n};\nconst SignPage = () => {\n  const dispatch = useDispatch(); // dispatch 사용\n  const {\n    accessToken,\n    refreshToken\n  } = useSelector(state => state); // Redux 상태에서 토큰 가져오기\n\n  // 폴더 리스트 가져오기\n  const folderList = useSelector(state => state.folder.floderList || []); // 안전하게 빈 배열로 초기화\n\n  // 폴더 리스트 상태가 갱신되면 실행될 useEffect\n  useEffect(() => {\n    console.log('현재 폴더 리스트:', folderList); // 폴더 리스트가 변경될 때마다 출력\n  }, [folderList]); // folderList가 변경될 때마다 실행됨\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      };\n      const response = await tempLogin(headers); // tempLogin 호출\n\n      console.log('Google Login Response:', response); // 응답을 제대로 확인\n\n      // 응답에서 accessToken, refreshToken 추출\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken)); // 토큰 저장\n        console.log('로그인 성공!'); // 성공 메시지 설정\n      } else {\n        console.log('로그인 응답에 문제가 있습니다.'); // 응답이 없거나 이상할 때 처리\n      }\n    } catch (err) {\n      console.log('Login Error:', err);\n    } finally {\n      console.log('로딩 종료'); // 로딩 상태 종료\n    }\n  };\n  const hanldeFolderPost = async () => {\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"아무개\")\n      };\n      const response = await folderPost(headers);\n      console.log('folderPost response:', response); // 응답 값 확인\n\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList));\n        folderList = response.folderList;\n      }\n    } catch (err) {\n      console.error('폴더 추가 실패:', err);\n    }\n  };\n  const hanldeFolderGet = async () => {\n    try {\n      const headers = {};\n      const response = await folderGet();\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList)); // Redux에 폴더 리스트 저장\n        folderList = response.folderList;\n      }\n      console.log('folder:', response);\n    } catch (err) {\n      console.log('폴더 조회 실패!');\n    } finally {\n      console.log('로딩 종료'); // 로딩 상태 종료\n    }\n  };\n  const hanldeFolderDelete = async () => {\n    const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n    if (!lastFolder) {\n      console.log('삭제할 폴더가 없습니다.'); // 폴더가 없음을 로그로 출력\n      return; // early return으로 함수 종료\n    }\n    try {\n      const headers = {};\n      const response = await folderDelete(headers, lastFolder.id);\n      console.log('folder:', response);\n    } catch (err) {\n      console.log(err);\n      console.log('폴더 삭제 실패!');\n    } finally {\n      console.log('로딩 종료'); // 로딩 상태 종료\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"example.png\",\n    alt: \"logo\",\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"sign-main-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImagePlaceholder, {\n    width: 362,\n    height: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sign-slogan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uBA54\\uC778 \\uC2AC\\uB85C\\uAC74 \\uCF54\\uBA58\\uD2B8\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC11C\\uBE0C \\uC2AC\\uB85C\\uAC74 \\uBC0F \\uAE30\\uD0C0 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-text-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Google \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\",\n    onClick: handleGoogleLogin // Google 로그인 핸들러 연결\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uCD94\\uAC00\",\n    onClick: hanldeFolderPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC870\\uD68C\",\n    onClick: hanldeFolderGet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC0AD\\uC81C\",\n    onClick: hanldeFolderDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default SignPage;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","setTokens","setFolderList","Button","tempLogin","folderGet","folderPost","folderDelete","ImagePlaceholder","width","height","placeholderStyle","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SignPage","dispatch","accessToken","refreshToken","state","folderList","folder","floderList","console","log","handleGoogleLogin","headers","encodeURIComponent","response","err","hanldeFolderPost","error","hanldeFolderGet","hanldeFolderDelete","lastFolder","length","id","src","alt","onClick","window","location","reload","label"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js"],"sourcesContent":["// src/pages/SignPage.js\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";  // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport { setFolderList } from \"../redux/actions/folderActions\"; // 폴더 관련 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost, folderDelete } from \"../services/folderService\";\nconst ImagePlaceholder = ({ width, height }) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div className=\"image-placeholder\" style={placeholderStyle}>\n      이미지 자리 표시지\n    </div>\n  );\n};\n\nconst SignPage = () => {\n  const dispatch = useDispatch();  // dispatch 사용\n  const { accessToken, refreshToken } = useSelector((state) => state);  // Redux 상태에서 토큰 가져오기\n  \n  // 폴더 리스트 가져오기\n  const folderList = useSelector((state) => state.folder.floderList || []); // 안전하게 빈 배열로 초기화\n  \n  // 폴더 리스트 상태가 갱신되면 실행될 useEffect\n  useEffect(() => {\n    console.log('현재 폴더 리스트:', folderList); // 폴더 리스트가 변경될 때마다 출력\n  }, [folderList]);  // folderList가 변경될 때마다 실행됨\n  \n  \n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n  \n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      };\n      const response = await tempLogin(headers);  // tempLogin 호출\n  \n      console.log('Google Login Response:', response);  // 응답을 제대로 확인\n  \n      // 응답에서 accessToken, refreshToken 추출\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken)); // 토큰 저장\n        console.log('로그인 성공!');  // 성공 메시지 설정\n      } else {\n        console.log('로그인 응답에 문제가 있습니다.');  // 응답이 없거나 이상할 때 처리\n      }\n    } catch (err) {\n      console.log('Login Error:', err);\n    } finally {\n      console.log('로딩 종료');  // 로딩 상태 종료\n    }\n  };  \n\n  const hanldeFolderPost = async () => {\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"아무개\")\n      };\n      const response = await folderPost(headers);\n      console.log('folderPost response:', response);  // 응답 값 확인\n      \n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList));\n        folderList=response.folderList;\n      }\n    } catch (err) {\n      console.error('폴더 추가 실패:', err);\n    }\n  };\n\n  const hanldeFolderGet = async () => {\n    try {\n      const headers = {\n      };\n      const response = await folderGet();\n\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList));  // Redux에 폴더 리스트 저장\n        folderList=response.folderList;\n      }\n      console.log('folder:', response);\n    } catch (err) {\n      console.log('폴더 조회 실패!');\n    } finally {\n      console.log('로딩 종료');  // 로딩 상태 종료\n    }\n  }\n\n  const hanldeFolderDelete = async () => {\n    const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n\n    if (!lastFolder) {\n      console.log('삭제할 폴더가 없습니다.');  // 폴더가 없음을 로그로 출력\n      return;  // early return으로 함수 종료\n    }\n\n    try {\n      const headers = {};\n\n      const response = await folderDelete(headers, lastFolder.id);\n\n      console.log('folder:', response);\n    } catch (err) {\n      console.log(err);\n      console.log('폴더 삭제 실패!');\n    } finally {\n      console.log('로딩 종료');  // 로딩 상태 종료\n    }\n  }\n  \n  return (\n    <div className=\"signpage\">\n      <header className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"example.png\"\n          alt=\"logo\"\n          onClick={() => window.location.reload()}\n        />\n      </header>\n      <main className=\"sign-main-style\">\n        <div className=\"image-section\">\n          <ImagePlaceholder width={362} height={320} /> {/* 여기서 크기 설정 */}\n        </div>\n        <div className=\"text-section\">\n          <h1 className=\"sign-slogan\">서비스 메인 슬로건 코멘트</h1>\n          <p>서비스 서브 슬로건 및 기타 설명</p>\n          <div className=\"sign-text-button-wrapper\">\n            <Button\n              label=\"Google 계정으로 로그인\"\n              onClick={handleGoogleLogin} // Google 로그인 핸들러 연결\n            />\n            <Button\n              label=\"폴더추가\"\n              onClick={hanldeFolderPost}\n            />\n            <Button\n              label=\"폴더조회\"\n              onClick={hanldeFolderGet}\n            />\n            <Button\n              label=\"폴더삭제\"\n              onClick={hanldeFolderDelete}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}