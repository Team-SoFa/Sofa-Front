{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\"; // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost, folderDelete, folderPut } from \"../services/folderService\";\nimport { put } from \"../services/apiClient\";\nconst ImagePlaceholder = ({\n  width,\n  height\n}) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-placeholder\",\n    style: placeholderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC790\\uB9AC \\uD45C\\uC2DC\\uC9C0\");\n};\nconst SignPage = () => {\n  const dispatch = useDispatch(); // dispatch 사용\n\n  // 1. 컴포넌트 내부에서 folderList를 상태로 관리\n  const [folderList, setFolderList] = useState([]); // 초기값은 빈 배열로 설정\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      };\n      const response = await tempLogin(headers); // tempLogin 호출\n\n      console.log('Google Login Response:', response); // 응답을 제대로 확인\n\n      // 응답에서 accessToken, refreshToken 추출\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken)); // 토큰 저장\n        console.log('로그인 성공!'); // 성공 메시지 설정\n      } else {\n        console.log('로그인 응답에 문제가 있습니다.'); // 응답이 없거나 이상할 때 처리\n      }\n    } catch (err) {\n      console.log('Login Error:', err);\n    } finally {\n      console.log('로딩 종료'); // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 추가 핸들러\n  const hanldeFolderPost = async () => {\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"아무개\")\n      };\n      const response = await folderPost(headers);\n      console.log('folderPost response:', response); // 응답 값 확인\n\n      if (response && response.floderList) {\n        // 새롭게 받아온 폴더 리스트를 상태에 저장\n        setFolderList(response.floderList);\n      }\n    } catch (err) {\n      console.error('폴더 추가 실패:', err);\n    }\n  };\n\n  // 폴더 조회 핸들러\n  const hanldeFolderGet = async () => {\n    try {\n      const headers = {};\n      const response = await folderGet();\n      if (response && response.floderList) {\n        // 새롭게 받아온 폴더 리스트를 상태에 저장\n        setFolderList(response.floderList);\n      }\n      console.log('폴더 조회 응답:', response);\n    } catch (err) {\n      console.log('폴더 조회 실패!');\n    } finally {\n      console.log('로딩 종료'); // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 삭제 핸들러\n  const hanldeFolderDelete = async () => {\n    const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n    if (!lastFolder) {\n      console.log('삭제할 폴더가 없습니다.'); // 폴더가 없음을 로그로 출력\n      return; // early return으로 함수 종료\n    }\n    console.log(lastFolder.id);\n    try {\n      const headers = {};\n      const response = await folderDelete(headers, lastFolder.id);\n      console.log('폴더 삭제 응답:', response);\n\n      // 폴더 삭제 후 폴더 목록 갱신\n      hanldeFolderGet();\n    } catch (err) {\n      console.log(err);\n      console.log('폴더 삭제 실패!');\n    } finally {\n      console.log('로딩 종료'); // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 수정 핸들러\n  const hanldeFolderPut = async () => {\n    const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"김데데\")\n      };\n      const response = await folderPut(headers, lastFolder.id);\n      console.log('folderPut response:', response); // 응답 값 확인\n    } catch (err) {\n      console.error('폴더 추가 실패:', err);\n    }\n  };\n\n  // 링크 추가 핸들러\n  const hanldeLinkCardPost = async () => {\n    try {\n      const headers = {\n        \"title\": encodeURIComponent(\"아무개\"),\n        \"url\": encodeURIComponent(\"www.naver.com\"),\n        \"folderId\": encodeURIComponent(\"TmxeMycIzgLMj_Ao3dDcfg==\"),\n        \"tagList\": [{\n          \"id\": 0,\n          \"tagType\": encodeURIComponent(\"CUSTOM\")\n        }],\n        \"memo\": encodeURIComponent(\"개똥벌레\"),\n        \"summary\": encodeURIComponent(\"개똥벌레\")\n      };\n      const response = await folderPost(headers);\n      console.log('linkCardPost response:', response); // 응답 값 확인\n    } catch (err) {\n      console.error('폴더 추가 실패:', err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"example.png\",\n    alt: \"logo\",\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"sign-main-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImagePlaceholder, {\n    width: 362,\n    height: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sign-slogan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uBA54\\uC778 \\uC2AC\\uB85C\\uAC74 \\uCF54\\uBA58\\uD2B8\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC11C\\uBE0C \\uC2AC\\uB85C\\uAC74 \\uBC0F \\uAE30\\uD0C0 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-text-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Google \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\",\n    onClick: handleGoogleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uCD94\\uAC00\",\n    onClick: hanldeFolderPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC870\\uD68C\",\n    onClick: hanldeFolderGet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC0AD\\uC81C\",\n    onClick: hanldeFolderDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC218\\uC815\",\n    onClick: hanldeFolderPut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uB9C1\\uD06C\\uCE74\\uB4DC\\uCD94\\uAC00\",\n    onClick: hanldeLinkCardPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default SignPage;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","setTokens","Button","tempLogin","folderGet","folderPost","folderDelete","folderPut","put","ImagePlaceholder","width","height","placeholderStyle","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SignPage","dispatch","folderList","setFolderList","handleGoogleLogin","headers","encodeURIComponent","response","console","log","accessToken","refreshToken","err","hanldeFolderPost","floderList","error","hanldeFolderGet","hanldeFolderDelete","lastFolder","length","id","hanldeFolderPut","hanldeLinkCardPost","src","alt","onClick","window","location","reload","label"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";  // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost, folderDelete, folderPut} from \"../services/folderService\";\nimport { put } from \"../services/apiClient\";\n\nconst ImagePlaceholder = ({ width, height }) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div className=\"image-placeholder\" style={placeholderStyle}>\n      이미지 자리 표시지\n    </div>\n  );\n};\n\nconst SignPage = () => {\n  const dispatch = useDispatch();  // dispatch 사용\n  \n  // 1. 컴포넌트 내부에서 folderList를 상태로 관리\n  const [folderList, setFolderList] = useState([]); // 초기값은 빈 배열로 설정\n  \n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      };\n      const response = await tempLogin(headers);  // tempLogin 호출\n  \n      console.log('Google Login Response:', response);  // 응답을 제대로 확인\n  \n      // 응답에서 accessToken, refreshToken 추출\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken)); // 토큰 저장\n        console.log('로그인 성공!');  // 성공 메시지 설정\n      } else {\n        console.log('로그인 응답에 문제가 있습니다.');  // 응답이 없거나 이상할 때 처리\n      }\n    } catch (err) {\n      console.log('Login Error:', err);\n    } finally {\n      console.log('로딩 종료');  // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 추가 핸들러\n  const hanldeFolderPost = async () => {\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"아무개\")\n      };\n      const response = await folderPost(headers);\n      console.log('folderPost response:', response);  // 응답 값 확인\n      \n      if (response && response.floderList) {\n        // 새롭게 받아온 폴더 리스트를 상태에 저장\n        setFolderList(response.floderList);\n      }\n    } catch (err) {\n      console.error('폴더 추가 실패:', err);\n    }\n  };\n\n  // 폴더 조회 핸들러\n  const hanldeFolderGet = async () => {\n    try {\n      const headers = {};\n      const response = await folderGet();\n\n      if (response && response.floderList) {\n        // 새롭게 받아온 폴더 리스트를 상태에 저장\n        setFolderList(response.floderList);  \n      }\n      console.log('폴더 조회 응답:', response);\n    } catch (err) {\n      console.log('폴더 조회 실패!');\n    } finally {\n      console.log('로딩 종료');  // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 삭제 핸들러\n  const hanldeFolderDelete = async () => {\n    const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n\n    if (!lastFolder) {\n      console.log('삭제할 폴더가 없습니다.');  // 폴더가 없음을 로그로 출력\n      return;  // early return으로 함수 종료\n    }\n\n    console.log(lastFolder.id);\n\n    try {\n      const headers = {};\n      const response = await folderDelete(headers, lastFolder.id);\n\n      console.log('폴더 삭제 응답:', response);\n\n      // 폴더 삭제 후 폴더 목록 갱신\n      hanldeFolderGet();\n    } catch (err) {\n      console.log(err);\n      console.log('폴더 삭제 실패!');\n    } finally {\n      console.log('로딩 종료');  // 로딩 상태 종료\n    }\n  };\n\n  // 폴더 수정 핸들러\n  const hanldeFolderPut = async () => {\n    const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n\n    try {\n      const headers = {\n        \"name\": encodeURIComponent(\"김데데\")\n      };\n      const response = await folderPut(headers, lastFolder.id);\n      console.log('folderPut response:', response);  // 응답 값 확인\n    } catch (err) {\n      console.error('폴더 추가 실패:', err);\n    }\n  };\n\n    // 링크 추가 핸들러\n    const hanldeLinkCardPost = async () => {\n      try {\n        const headers = {\n          \"title\": encodeURIComponent(\"아무개\"),\n          \"url\": encodeURIComponent(\"www.naver.com\"),\n          \"folderId\": encodeURIComponent(\"TmxeMycIzgLMj_Ao3dDcfg==\"),\n          \"tagList\": [\n            {\n              \"id\": 0,\n              \"tagType\": encodeURIComponent(\"CUSTOM\")\n            }\n          ],\n          \"memo\": encodeURIComponent(\"개똥벌레\"),\n          \"summary\": encodeURIComponent(\"개똥벌레\")\n        };\n        const response = await folderPost(headers);\n        console.log('linkCardPost response:', response);  // 응답 값 확인\n      \n      } catch (err) {\n        console.error('폴더 추가 실패:', err);\n      }\n    };\n  \n  return (\n    <div className=\"signpage\">\n      <header className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"example.png\"\n          alt=\"logo\"\n          onClick={() => window.location.reload()}\n        />\n      </header>\n      <main className=\"sign-main-style\">\n        <div className=\"image-section\">\n          <ImagePlaceholder width={362} height={320} /> \n        </div>\n        <div className=\"text-section\">\n          <h1 className=\"sign-slogan\">서비스 메인 슬로건 코멘트</h1>\n          <p>서비스 서브 슬로건 및 기타 설명</p>\n          <div className=\"sign-text-button-wrapper\">\n            <Button\n              label=\"Google 계정으로 로그인\"\n              onClick={handleGoogleLogin} \n            />\n            <Button\n              label=\"폴더추가\"\n              onClick={hanldeFolderPost}\n            />\n            <Button\n              label=\"폴더조회\"\n              onClick={hanldeFolderGet}\n            />\n            <Button\n              label=\"폴더삭제\"\n              onClick={hanldeFolderDelete}\n            />\n            <Button\n              label=\"폴더수정\"\n              onClick={hanldeFolderPut}\n            />\n            <Button\n              label=\"링크카드추가\"\n              onClick={hanldeLinkCardPost}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}