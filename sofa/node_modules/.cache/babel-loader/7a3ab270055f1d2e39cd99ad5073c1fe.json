{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js\";\n// src/pages/SignPage.js\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { getGoogleLoginUrl, tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\n\nconst ImagePlaceholder = ({\n  width,\n  height\n}) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-placeholder\",\n    style: placeholderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC790\\uB9AC \\uD45C\\uC2DC\\uC9C0\");\n};\nconst SignPage = () => {\n  const dispatch = useDispatch(); // dispatch 사용\n  const {\n    accessToken,\n    refreshToken\n  } = useSelector(state => state); // Redux 상태에서 토큰 가져오기\n\n  const [loading, setLoading] = useState(false); // 로딩 상태 관리\n  const [error, setError] = useState(null); // 에러 상태 관리\n  const [message, setMessage] = useState(''); // 성공 메시지 상태 관리\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    setLoading(true); // 로딩 상태 시작\n    setError(null); // 이전 에러 상태 초기화\n    setMessage(''); // 이전 메시지 초기화\n\n    // 임시 로그인 API 호출\n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      }; // 기본 헤더 (인증 헤더 등 추가 필요 시)\n      const response = await tempLogin(headers); // tempLogin 함수 호출\n      console.log('Login Response:', response); // API 응답 로그\n\n      // 액션을 디스패치하여 Redux에 토큰 저장\n      dispatch(setTokens(response.accessToken, response.refreshToken));\n      setMessage('로그인 성공!'); // 성공 메시지 설정\n    } catch (err) {\n      setError('로그인 실패! 다시 시도해주세요.'); // 에러 메시지 설정\n    } finally {\n      setLoading(false); // 로딩 상태 종료\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"example.png\",\n    alt: \"logo\",\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"sign-main-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImagePlaceholder, {\n    width: 362,\n    height: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sign-slogan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uBA54\\uC778 \\uC2AC\\uB85C\\uAC74 \\uCF54\\uBA58\\uD2B8\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC11C\\uBE0C \\uC2AC\\uB85C\\uAC74 \\uBC0F \\uAE30\\uD0C0 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-text-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Google \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\",\n    onClick: handleGoogleLogin // Google 로그인 핸들러 연결\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), loading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }\n  }, \"\\uB85C\\uB529 \\uC911...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, error), message && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, message), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"\\uC800\\uC7A5\\uB41C \\uD1A0\\uD070\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Access Token: \", accessToken), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Refresh Token: \", refreshToken)))));\n};\nexport default SignPage;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setTokens","Button","getGoogleLoginUrl","tempLogin","ImagePlaceholder","width","height","placeholderStyle","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SignPage","dispatch","accessToken","refreshToken","state","loading","setLoading","error","setError","message","setMessage","handleGoogleLogin","headers","encodeURIComponent","response","console","log","err","src","alt","onClick","window","location","reload","label"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js"],"sourcesContent":["// src/pages/SignPage.js\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";  // Redux 관련 hooks\nimport { setTokens } from \"../redux/actions/authActions\"; // 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { getGoogleLoginUrl, tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\n\nconst ImagePlaceholder = ({ width, height }) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div className=\"image-placeholder\" style={placeholderStyle}>\n      이미지 자리 표시지\n    </div>\n  );\n};\n\nconst SignPage = () => {\n  const dispatch = useDispatch();  // dispatch 사용\n  const { accessToken, refreshToken } = useSelector((state) => state);  // Redux 상태에서 토큰 가져오기\n\n  const [loading, setLoading] = useState(false);  // 로딩 상태 관리\n  const [error, setError] = useState(null);       // 에러 상태 관리\n  const [message, setMessage] = useState('');     // 성공 메시지 상태 관리\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    setLoading(true);  // 로딩 상태 시작\n    setError(null);    // 이전 에러 상태 초기화\n    setMessage('');    // 이전 메시지 초기화\n\n    // 임시 로그인 API 호출\n    try {\n      const headers = {\n        \"email\": encodeURIComponent(\"mg0454@gmail.com\"),\n        \"name\": encodeURIComponent(\"성명근\")\n      }; // 기본 헤더 (인증 헤더 등 추가 필요 시)\n      const response = await tempLogin(headers);  // tempLogin 함수 호출\n      console.log('Login Response:', response);  // API 응답 로그\n      \n      // 액션을 디스패치하여 Redux에 토큰 저장\n      dispatch(setTokens(response.accessToken, response.refreshToken));\n      \n      setMessage('로그인 성공!'); // 성공 메시지 설정\n    } catch (err) {\n      setError('로그인 실패! 다시 시도해주세요.');  // 에러 메시지 설정\n    } finally {\n      setLoading(false);  // 로딩 상태 종료\n    }\n  };\n\n  return (\n    <div className=\"signpage\">\n      <header className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"example.png\"\n          alt=\"logo\"\n          onClick={() => window.location.reload()}\n        />\n      </header>\n      <main className=\"sign-main-style\">\n        <div className=\"image-section\">\n          <ImagePlaceholder width={362} height={320} /> {/* 여기서 크기 설정 */}\n        </div>\n        <div className=\"text-section\">\n          <h1 className=\"sign-slogan\">서비스 메인 슬로건 코멘트</h1>\n          <p>서비스 서브 슬로건 및 기타 설명</p>\n          <div className=\"sign-text-button-wrapper\">\n            <Button\n              label=\"Google 계정으로 로그인\"\n              onClick={handleGoogleLogin} // Google 로그인 핸들러 연결\n            />\n          </div>\n          {loading && <p>로딩 중...</p>}\n          {error && <p>{error}</p>}\n          {message && <p>{message}</p>}\n          \n          {/* 상태 확인 */}\n          <div>\n            <h3>저장된 토큰</h3>\n            <p>Access Token: {accessToken}</p>\n            <p>Refresh Token: {refreshToken}</p>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}