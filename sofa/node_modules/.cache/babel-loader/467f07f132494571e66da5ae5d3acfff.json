{"ast":null,"code":"// src/services/loginService.js\nimport apiClient from \"./apiClient\";\n\n// Google 로그인 URL을 얻는 API 호출\nexport const getGoogleLoginUrl = async (headers = {}) => {\n  try {\n    const url = await get('/login/oauth2/google', headers); // GET 요청 보내기\n    return url; // 로그인 URL 반환\n  } catch (error) {\n    console.error('Google 로그인 URL을 가져오는 데 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// 임시 로그인 함수 (accessToken, refreshToken을 포함한 응답 반환)\nexport const tempLogin = async headers => {\n  try {\n    const response = await post(\"/login/oauth2/signUpOrLogin\", {}, {\n      headers\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    throw error;\n  }\n};\n\n// 사용자 정보 업데이트 (PUT 요청 예시)\nexport const updateUserInfo = async (data, headers = {}) => {\n  try {\n    const response = await put('/user/update', data, headers); // PUT 요청 보내기 (사용자 정보 업데이트)\n    return response; // 업데이트된 사용자 정보 반환\n  } catch (error) {\n    console.error('사용자 정보 업데이트에 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// 사용자 삭제 (DELETE 요청 예시)\nexport const deleteUser = async (userId, headers = {}) => {\n  try {\n    const response = await del(`/user/${userId}`, headers); // DELETE 요청 보내기 (사용자 삭제)\n    return response; // 삭제된 사용자 정보 반환\n  } catch (error) {\n    console.error('사용자 삭제에 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};","map":{"version":3,"names":["apiClient","getGoogleLoginUrl","headers","url","get","error","console","tempLogin","response","post","data","updateUserInfo","put","deleteUser","userId","del"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/services/loginService.js"],"sourcesContent":["// src/services/loginService.js\nimport apiClient from \"./apiClient\";\n\n// Google 로그인 URL을 얻는 API 호출\nexport const getGoogleLoginUrl = async (headers = {}) => {\n  try {\n    const url = await get('/login/oauth2/google', headers); // GET 요청 보내기\n    return url; // 로그인 URL 반환\n  } catch (error) {\n    console.error('Google 로그인 URL을 가져오는 데 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// 임시 로그인 함수 (accessToken, refreshToken을 포함한 응답 반환)\nexport const tempLogin = async (headers) => {\n  try {\n    const response = await post(\"/login/oauth2/signUpOrLogin\", {}, { headers });\n    return response.data;\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    throw error;\n  }\n};\n\n// 사용자 정보 업데이트 (PUT 요청 예시)\nexport const updateUserInfo = async (data, headers = {}) => {\n  try {\n    const response = await put('/user/update', data, headers); // PUT 요청 보내기 (사용자 정보 업데이트)\n    return response; // 업데이트된 사용자 정보 반환\n  } catch (error) {\n    console.error('사용자 정보 업데이트에 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// 사용자 삭제 (DELETE 요청 예시)\nexport const deleteUser = async (userId, headers = {}) => {\n  try {\n    const response = await del(`/user/${userId}`, headers); // DELETE 요청 보내기 (사용자 삭제)\n    return response; // 삭제된 사용자 정보 반환\n  } catch (error) {\n    console.error('사용자 삭제에 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,aAAa;;AAEnC;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EACvD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,GAAG,CAAC,sBAAsB,EAAEF,OAAO,CAAC,CAAC,CAAC;IACxD,OAAOC,GAAG,CAAC,CAAC;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOL,OAAO,IAAK;EAC1C,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMC,IAAI,CAAC,6BAA6B,EAAE,CAAC,CAAC,EAAE;MAAEP;IAAQ,CAAC,CAAC;IAC3E,OAAOM,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAAOD,IAAI,EAAER,OAAO,GAAG,CAAC,CAAC,KAAK;EAC1D,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMI,GAAG,CAAC,cAAc,EAAEF,IAAI,EAAER,OAAO,CAAC,CAAC,CAAC;IAC3D,OAAOM,QAAQ,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEZ,OAAO,GAAG,CAAC,CAAC,KAAK;EACxD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMO,GAAG,CAAC,SAASD,MAAM,EAAE,EAAEZ,OAAO,CAAC,CAAC,CAAC;IACxD,OAAOM,QAAQ,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}