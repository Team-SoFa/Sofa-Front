{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Header from\"../components/Layout/Header\";import SideMenu from\"../components/SideMenu/SideMenu\";import ShowLinkCard from\"../components/LinkCard/ShowLinkCard\";import Dropdown from\"../components/Dropdown/Dropdown\";import BookmarkDetail from\"../components/LinkCard/BookmarkDetail\";import\"../components/Layout/main-layout.css\";const FolderPage=_ref=>{let{bookmarks,onDeleteBookmark}=_ref;const[folderName,setFolderName]=useState(\"\");//폴더명\nconst[loading,setLoading]=useState(true);//로딩 상태\nconst[sortingOption,setSortingOption]=useState(\"최근저장\");//정렬 기준\nconst[sortingDirOption,setSortingDirOption]=useState(\"오름차순\");//정렬 방향\nconst[isMenuOpen,setIsMenuOpen]=useState(false);const[selectedBookmark,setSelectedBookmark]=useState(null);const sortingOpt=[\"최근저장\",\"오래된저장\",\"이름순\"].map(item=>({label:item,content:item}));const sortingDirOpt=[\"오름차순\",\"내림차순\"].map(item=>({label:item,content:item}));const toggleMenu=()=>{setIsMenuOpen(!isMenuOpen);};useEffect(()=>{const fetchUserInfo=async()=>{try{// 폴더명 API 받아오기\nconst folderNameData={label:\"폴더명\"};setFolderName(folderNameData.label);setLoading(false);}catch(error){console.error(\"Fail to get user information\",error);setLoading(false);}};fetchUserInfo();},[]);const handleDelete=id=>onDeleteBookmark(id);const handleEdit=id=>{//추후 수정 기능 코드 추가\n};// SORTING\nconst handleSortingSelect=option=>{setSortingOption(option.content);};const handleSortingDirSelect=option=>{setSortingDirOption(option.content);};const handleBookmarkClick=bookmark=>{console.log(\"Clicked bookmark:\",bookmark);setSelectedBookmark(bookmark);// 클릭된 북마크 상태 저장\n};const handleBookmarkClose=()=>{setSelectedBookmark(null);// 상세 정보를 닫기\n};return/*#__PURE__*/React.createElement(\"div\",{className:`main-page ${isMenuOpen?\"menu-open\":\"\"} ${selectedBookmark?\"show-detail\":\"\"}`},/*#__PURE__*/React.createElement(Header,{toggleMenu:toggleMenu}),/*#__PURE__*/React.createElement(SideMenu,{isOpen:isMenuOpen,toggleMenu:toggleMenu}),/*#__PURE__*/React.createElement(\"section\",{className:\"main-box\"},/*#__PURE__*/React.createElement(\"h3\",null,folderName),/*#__PURE__*/React.createElement(\"div\",{className:\"sorting-options\"},/*#__PURE__*/React.createElement(Dropdown,{className:\"sorting\",label:\"\\uCD5C\\uADFC\\uC800\\uC7A5\",options:sortingOpt,onSelect:handleSortingSelect}),/*#__PURE__*/React.createElement(Dropdown,{className:\"sorting\",label:\"\\uC624\\uB984\\uCC28\\uC21C\",options:sortingDirOpt,onSelect:handleSortingDirSelect})),/*#__PURE__*/React.createElement(ShowLinkCard,{bookmarks:bookmarks,onDelete:handleDelete,onEdit:handleEdit,onLinkCardClick:handleBookmarkClick// 북마크 클릭 핸들러 전달\n,sideMenuOpen:isMenuOpen,bookmarkDetailOpen:selectedBookmark,sortingOption:sortingOption,sortingDirOption:sortingDirOption})),selectedBookmark&&/*#__PURE__*/React.createElement(\"div\",{className:\"bookmark-detail-container\"},/*#__PURE__*/React.createElement(BookmarkDetail,{bookmark:selectedBookmark,onEdit:()=>console.log(\"Edit clicked\"),onDelete:()=>console.log(\"Delete clicked\"),onClose:handleBookmarkClose})));};export default FolderPage;","map":{"version":3,"names":["React","useState","useEffect","Header","SideMenu","ShowLinkCard","Dropdown","BookmarkDetail","FolderPage","_ref","bookmarks","onDeleteBookmark","folderName","setFolderName","loading","setLoading","sortingOption","setSortingOption","sortingDirOption","setSortingDirOption","isMenuOpen","setIsMenuOpen","selectedBookmark","setSelectedBookmark","sortingOpt","map","item","label","content","sortingDirOpt","toggleMenu","fetchUserInfo","folderNameData","error","console","handleDelete","id","handleEdit","handleSortingSelect","option","handleSortingDirSelect","handleBookmarkClick","bookmark","log","handleBookmarkClose","createElement","className","isOpen","options","onSelect","onDelete","onEdit","onLinkCardClick","sideMenuOpen","bookmarkDetailOpen","onClose"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/FolderPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\";\n\nimport \"../components/Layout/main-layout.css\";\n\nconst FolderPage = ({ bookmarks, onDeleteBookmark }) => {\n  const [folderName, setFolderName] = useState(\"\"); //폴더명\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [sortingOption, setSortingOption] = useState(\"최근저장\"); //정렬 기준\n  const [sortingDirOption, setSortingDirOption] = useState(\"오름차순\"); //정렬 방향\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedBookmark, setSelectedBookmark] = useState(null);\n\n  const sortingOpt = [\"최근저장\", \"오래된저장\", \"이름순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // 폴더명 API 받아오기\n        const folderNameData = { label: \"폴더명\" };\n        setFolderName(folderNameData.label);\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n  const handleEdit = (id) => {\n    //추후 수정 기능 코드 추가\n  };\n\n  // SORTING\n  const handleSortingSelect = (option) => {\n    setSortingOption(option.content);\n  };\n  const handleSortingDirSelect = (option) => {\n    setSortingDirOption(option.content);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  return (\n    <div\n      className={`main-page ${isMenuOpen ? \"menu-open\" : \"\"} ${\n        selectedBookmark ? \"show-detail\" : \"\"\n      }`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section className=\"main-box\">\n        <h3>{folderName}</h3>\n\n        <div className=\"sorting-options\">\n          <Dropdown\n            className=\"sorting\"\n            label=\"최근저장\"\n            options={sortingOpt}\n            onSelect={handleSortingSelect}\n          />\n          <Dropdown\n            className=\"sorting\"\n            label=\"오름차순\"\n            options={sortingDirOpt}\n            onSelect={handleSortingDirSelect}\n          />\n        </div>\n\n        <ShowLinkCard\n          bookmarks={bookmarks}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n          onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n          sideMenuOpen={isMenuOpen}\n          bookmarkDetailOpen={selectedBookmark}\n          sortingOption={sortingOption}\n          sortingDirOption={sortingDirOption}\n        />\n      </section>\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FolderPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}