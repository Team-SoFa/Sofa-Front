{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/components/LinkCard/ShowLinkCard.js\";\n// BookmarkList.js\n\nimport React from \"react\";\nimport LinkCard from \"./LinkCard.js\";\nimport \"./ShowLinkCard.css\";\n\n//bookmarks : 북마크 데이터 배열(id, title, url 포함)\n//onDelete : 북마크 삭제 함수\n//북마크 목록 길이가 0보다 길면 렌더링\nconst ShowLinkCard = ({\n  bookmarks,\n  onDelete,\n  onEdit,\n  sortingOption,\n  onLinkCardClick\n}) => {\n  //Sorting\n  const sortBookmarks = (bookmarks, sortingOption) => {\n    if (sortingOption === \"최근 저장\") {\n      return bookmarks.sort((a, b) => b.id - a.id);\n    } else if (sortingOption === \"오래된 저장\") {\n      return bookmarks.sort((a, b) => a.id - b.id);\n    } else if (sortingOption === \"오름차순\") {\n      return bookmarks.sort((a, b) => a.title.localeCompare(b.title)); // 제목 알파벳 오름차순 정렬\n    } else if (sortingOption === \"내림차순\") {\n      return bookmarks.sort((a, b) => b.title.localeCompare(a.title)); // 제목 알파벳 내림차순 정렬\n    }\n    return bookmarks;\n  };\n  const sortedBookmarks = sortingOption ? sortBookmarks([...bookmarks], sortingOption) : bookmarks;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmark-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, sortedBookmarks.length > 0 ? sortedBookmarks.map(bookmark => /*#__PURE__*/React.createElement(LinkCard, {\n    key: bookmark.id //리스트에서 고유 식별자 사용\n    ,\n    bookmark: bookmark //각 북마크 데이터를 BookmarkItem에 전달\n    ,\n    onDelete: onDelete //삭제 기능을 BookmarkItem에 전달\n    ,\n    onEdit: onEdit,\n    onClick: () => {\n      console.log(\"Card clicked:\", bookmark);\n      onLinkCardClick(bookmark); // 안전하게 호출\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"...\"));\n};\nexport default ShowLinkCard;","map":{"version":3,"names":["React","LinkCard","ShowLinkCard","bookmarks","onDelete","onEdit","sortingOption","onLinkCardClick","sortBookmarks","sort","a","b","id","title","localeCompare","sortedBookmarks","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","bookmark","key","onClick","console","log"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/components/LinkCard/ShowLinkCard.js"],"sourcesContent":["// BookmarkList.js\n\nimport React from \"react\";\nimport LinkCard from \"./LinkCard.js\";\nimport \"./ShowLinkCard.css\";\n\n//bookmarks : 북마크 데이터 배열(id, title, url 포함)\n//onDelete : 북마크 삭제 함수\n//북마크 목록 길이가 0보다 길면 렌더링\nconst ShowLinkCard = ({ bookmarks, onDelete, onEdit, sortingOption, onLinkCardClick }) => {\n  //Sorting\n  const sortBookmarks = (bookmarks, sortingOption) => {\n    if (sortingOption === \"최근 저장\") {\n      return bookmarks.sort((a, b) => b.id - a.id);\n    } else if (sortingOption === \"오래된 저장\") {\n      return bookmarks.sort((a, b) => a.id - b.id);\n    } else if (sortingOption === \"오름차순\") {\n      return bookmarks.sort((a, b) => a.title.localeCompare(b.title)); // 제목 알파벳 오름차순 정렬\n    } else if (sortingOption === \"내림차순\") {\n      return bookmarks.sort((a, b) => b.title.localeCompare(a.title)); // 제목 알파벳 내림차순 정렬\n    }\n    return bookmarks;\n  };\n\n  const sortedBookmarks = sortingOption\n    ? sortBookmarks([...bookmarks], sortingOption)\n    : bookmarks;\n\n  return (\n    <div className=\"bookmark-grid\">\n      {sortedBookmarks.length > 0 ? (\n        sortedBookmarks.map((bookmark) => (\n          <LinkCard\n            key={bookmark.id} //리스트에서 고유 식별자 사용\n            bookmark={bookmark} //각 북마크 데이터를 BookmarkItem에 전달\n            onDelete={onDelete} //삭제 기능을 BookmarkItem에 전달\n            onEdit={onEdit}\n            onClick={() => {\n              console.log(\"Card clicked:\", bookmark)\n              onLinkCardClick(bookmark) // 안전하게 호출\n            }}\n          />\n        ))\n      ) : (\n        <p>...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ShowLinkCard;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAO,oBAAoB;;AAE3B;AACA;AACA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,aAAa;EAAEC;AAAgB,CAAC,KAAK;EACxF;EACA,MAAMC,aAAa,GAAGA,CAACL,SAAS,EAAEG,aAAa,KAAK;IAClD,IAAIA,aAAa,KAAK,OAAO,EAAE;MAC7B,OAAOH,SAAS,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,CAAC;IAC9C,CAAC,MAAM,IAAIN,aAAa,KAAK,QAAQ,EAAE;MACrC,OAAOH,SAAS,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,CAAC;IAC9C,CAAC,MAAM,IAAIN,aAAa,KAAK,MAAM,EAAE;MACnC,OAAOH,SAAS,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACG,KAAK,CAACC,aAAa,CAACH,CAAC,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,MAAM,IAAIP,aAAa,KAAK,MAAM,EAAE;MACnC,OAAOH,SAAS,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACE,KAAK,CAACC,aAAa,CAACJ,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnE;IACA,OAAOV,SAAS;EAClB,CAAC;EAED,MAAMY,eAAe,GAAGT,aAAa,GACjCE,aAAa,CAAC,CAAC,GAAGL,SAAS,CAAC,EAAEG,aAAa,CAAC,GAC5CH,SAAS;EAEb,oBACEH,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BR,eAAe,CAACS,MAAM,GAAG,CAAC,GACzBT,eAAe,CAACU,GAAG,CAAEC,QAAQ,iBAC3B1B,KAAA,CAAAgB,aAAA,CAACf,QAAQ;IACP0B,GAAG,EAAED,QAAQ,CAACd,EAAG,CAAC;IAAA;IAClBc,QAAQ,EAAEA,QAAS,CAAC;IAAA;IACpBtB,QAAQ,EAAEA,QAAS,CAAC;IAAA;IACpBC,MAAM,EAAEA,MAAO;IACfuB,OAAO,EAAEA,CAAA,KAAM;MACbC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ,CAAC;MACtCnB,eAAe,CAACmB,QAAQ,CAAC,EAAC;IAC5B,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CACF,CAAC,gBAEFvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,KAAM,CAER,CAAC;AAEV,CAAC;AAED,eAAerB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}