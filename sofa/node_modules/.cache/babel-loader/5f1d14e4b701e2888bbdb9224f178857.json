{"ast":null,"code":"import { tokenPost, tokenGet, tokenDel, tokenPut, post } from \"./apiClient\";\nexport const folderGet = async params => {\n  try {\n    const response = await tokenGet(\"/folder\", {\n      params\n    }, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderPost = async data => {\n  try {\n    const response = await post(\"/folder\", {\n      data\n    }, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderDelete = async (headers, id) => {\n  try {\n    const response = await tokenDel(\"/folder/\" + id, {}, {\n      headers\n    });\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderPut = async (headers, id) => {\n  try {\n    const response = await tokenPut(\"/folder/\" + id, {}, {\n      headers\n    });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["tokenPost","tokenGet","tokenDel","tokenPut","post","folderGet","params","response","error","console","folderPost","data","folderDelete","headers","id","folderPut","log"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/services/folderService.js"],"sourcesContent":["import {tokenPost, tokenGet, tokenDel, tokenPut, post} from \"./apiClient\";\n  \nexport const folderGet = async (params) => {\n  try {\n    const response = await tokenGet(\"/folder\", {params}, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n\nexport const folderPost = async (data) => {\n  try {\n    const response = await post(\"/folder\", {data}, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n  \nexport const folderDelete = async (headers, id) => {\n  try {\n    const response = await tokenDel(\"/folder/\"+id, {}, { headers });\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n\nexport const folderPut = async (headers, id) => {\n  try {\n    const response = await tokenPut(\"/folder/\"+id, {}, { headers });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,QAAO,aAAa;AAEzE,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAAC,SAAS,EAAE;MAACK;IAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMH,IAAI,CAAC,SAAS,EAAE;MAACO;IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,OAAOJ,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,EAAE,KAAK;EACjD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAML,QAAQ,CAAC,UAAU,GAACY,EAAE,EAAE,CAAC,CAAC,EAAE;MAAED;IAAQ,CAAC,CAAC;IAC/D,OAAON,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAAA,CAAOF,OAAO,EAAEC,EAAE,KAAK;EAC9C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMJ,QAAQ,CAAC,UAAU,GAACW,EAAE,EAAE,CAAC,CAAC,EAAE;MAAED;IAAQ,CAAC,CAAC;IAC/DJ,OAAO,CAACO,GAAG,CAACT,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}