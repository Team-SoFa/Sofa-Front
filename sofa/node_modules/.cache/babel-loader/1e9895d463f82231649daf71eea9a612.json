{"ast":null,"code":"import React,{useState,useRef}from\"react\";import\"./Dropdown.css\";import{OutsideClick}from\"../OutsideClick\";const Dropdown=_ref=>{let{className,options,label,onSelect}=_ref;const dropdownRef=useRef(null);//드롭다운 요소 참조를 위한 ref 생성\nconst[isOpen,setIsOpen]=OutsideClick(dropdownRef,false);//OutsideClick 사용\nconst[selectedValue,setSelectedValue]=useState(null);//선택된 값 상태 관리\nconst handleSelect=value=>{// className이 \"alarm\"일 때 label을 변경하지 않음\nif(className!==\"alarm\"){setSelectedValue(value);}setIsOpen(false);// 드롭다운 닫기\nonSelect(value);};const toggleDropdown=()=>{//드롭다운 토글 함수\nsetIsOpen(!isOpen);};return/*#__PURE__*/React.createElement(\"div\",{className:`dropdown ${className}`,ref:dropdownRef},/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-header\",onClick:toggleDropdown},selectedValue?selectedValue.label:/*#__PURE__*/React.createElement(\"span\",{className:\"dropdown-placeholder\"},label),className===\"alarm\"&&(options===null||options===void 0?void 0:options.length)>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"dropdown-badge\"})),isOpen&&/*#__PURE__*/React.createElement(\"div\",{className:\"dropdown-menu\"},options.map((option,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"dropdown-option\",onClick:()=>handleSelect(option)},option.img&&/*#__PURE__*/React.createElement(\"img\",{src:option.img,alt:\"\",className:\"dropdown-option-img\"}),option.content))));};export default Dropdown;","map":{"version":3,"names":["React","useState","useRef","OutsideClick","Dropdown","_ref","className","options","label","onSelect","dropdownRef","isOpen","setIsOpen","selectedValue","setSelectedValue","handleSelect","value","toggleDropdown","createElement","ref","onClick","length","map","option","index","key","img","src","alt","content"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/components/Dropdown/Dropdown.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./Dropdown.css\";\nimport { OutsideClick } from \"../OutsideClick\";\n\nconst Dropdown = ({ className, options, label, onSelect }) => {\n  const dropdownRef = useRef(null); //드롭다운 요소 참조를 위한 ref 생성\n  const [isOpen, setIsOpen] = OutsideClick(dropdownRef, false); //OutsideClick 사용\n  const [selectedValue, setSelectedValue] = useState(null); //선택된 값 상태 관리\n\n  const handleSelect = (value) => {\n    // className이 \"alarm\"일 때 label을 변경하지 않음\n    if (className !== \"alarm\") {\n      setSelectedValue(value);\n    }\n    setIsOpen(false); // 드롭다운 닫기\n    onSelect(value);\n  };\n  const toggleDropdown = () => {\n    //드롭다운 토글 함수\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className={`dropdown ${className}`} ref={dropdownRef}>\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\n        {selectedValue ? (\n          selectedValue.label\n        ) : (\n          <span className=\"dropdown-placeholder\">{label}</span>\n        )}\n        {className === \"alarm\" && options?.length > 0 && (\n          <span className=\"dropdown-badge\"></span>\n        )}\n      </div>\n\n      {isOpen && (\n        <div className=\"dropdown-menu\">\n          {options.map((option, index) => (\n            <div\n              key={index}\n              className=\"dropdown-option\"\n              onClick={() => handleSelect(option)}\n            >\n              {option.img && (\n                <img src={option.img} alt=\"\" className=\"dropdown-option-img\" />\n              )}\n              {option.content}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC/C,MAAO,gBAAgB,CACvB,OAASC,YAAY,KAAQ,iBAAiB,CAE9C,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAA6C,IAA5C,CAAEC,SAAS,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAJ,IAAA,CACvD,KAAM,CAAAK,WAAW,CAAGR,MAAM,CAAC,IAAI,CAAC,CAAE;AAClC,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGT,YAAY,CAACO,WAAW,CAAE,KAAK,CAAC,CAAE;AAC9D,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE1D,KAAM,CAAAc,YAAY,CAAIC,KAAK,EAAK,CAC9B;AACA,GAAIV,SAAS,GAAK,OAAO,CAAE,CACzBQ,gBAAgB,CAACE,KAAK,CAAC,CACzB,CACAJ,SAAS,CAAC,KAAK,CAAC,CAAE;AAClBH,QAAQ,CAACO,KAAK,CAAC,CACjB,CAAC,CACD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B;AACAL,SAAS,CAAC,CAACD,MAAM,CAAC,CACpB,CAAC,CAED,mBACEX,KAAA,CAAAkB,aAAA,QAAKZ,SAAS,CAAE,YAAYA,SAAS,EAAG,CAACa,GAAG,CAAET,WAAY,eACxDV,KAAA,CAAAkB,aAAA,QAAKZ,SAAS,CAAC,iBAAiB,CAACc,OAAO,CAAEH,cAAe,EACtDJ,aAAa,CACZA,aAAa,CAACL,KAAK,cAEnBR,KAAA,CAAAkB,aAAA,SAAMZ,SAAS,CAAC,sBAAsB,EAAEE,KAAY,CACrD,CACAF,SAAS,GAAK,OAAO,EAAI,CAAAC,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEc,MAAM,EAAG,CAAC,eAC3CrB,KAAA,CAAAkB,aAAA,SAAMZ,SAAS,CAAC,gBAAgB,CAAO,CAEtC,CAAC,CAELK,MAAM,eACLX,KAAA,CAAAkB,aAAA,QAAKZ,SAAS,CAAC,eAAe,EAC3BC,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,gBACzBxB,KAAA,CAAAkB,aAAA,QACEO,GAAG,CAAED,KAAM,CACXlB,SAAS,CAAC,iBAAiB,CAC3Bc,OAAO,CAAEA,CAAA,GAAML,YAAY,CAACQ,MAAM,CAAE,EAEnCA,MAAM,CAACG,GAAG,eACT1B,KAAA,CAAAkB,aAAA,QAAKS,GAAG,CAAEJ,MAAM,CAACG,GAAI,CAACE,GAAG,CAAC,EAAE,CAACtB,SAAS,CAAC,qBAAqB,CAAE,CAC/D,CACAiB,MAAM,CAACM,OACL,CACN,CACE,CAEJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAzB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}