{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTokens } from \"../redux/actions/authActions\";\nimport { setFolderList } from \"../redux/actions/folderActions\"; // 폴더 관련 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost, folderDelete } from \"../services/folderService\";\nconst ImagePlaceholder = ({\n  width,\n  height\n}) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-placeholder\",\n    style: placeholderStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC790\\uB9AC \\uD45C\\uC2DC\\uC9C0\");\n};\nconst SignPage = () => {\n  const dispatch = useDispatch();\n  const {\n    accessToken,\n    refreshToken\n  } = useSelector(state => state.auth);\n  const folderList = useSelector(state => state.folder.floderList); // 폴더 리스트 가져오기\n  const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    try {\n      const headers = {\n        email: encodeURIComponent(\"mg0454@gmail.com\"),\n        name: encodeURIComponent(\"성명근\")\n      };\n      const response = await tempLogin(headers);\n      console.log(\"Google Login Response:\", response);\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken));\n        console.log(\"로그인 성공!\");\n      } else {\n        console.log(\"로그인 응답에 문제가 있습니다.\");\n      }\n    } catch (err) {\n      console.log(\"Login Error:\", err);\n    } finally {\n      console.log(\"로딩 종료\");\n    }\n  };\n  const handleFolderPost = async () => {\n    try {\n      const headers = {\n        name: encodeURIComponent(\"아무개\")\n      };\n      const response = await folderPost(headers);\n      console.log(\"folderPost response:\", response);\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList)); // 상태 갱신\n      }\n    } catch (err) {\n      console.error(\"폴더 추가 실패:\", err);\n    }\n  };\n  const handleFolderGet = async () => {\n    try {\n      const response = await folderGet();\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList)); // Redux에 폴더 리스트 저장\n      }\n      console.log(\"folder:\", response);\n    } catch (err) {\n      console.log(\"폴더 조회 실패!\");\n    } finally {\n      console.log(\"로딩 종료\");\n    }\n  };\n  const handleFolderDelete = async () => {\n    if (!lastFolder) {\n      console.log(\"삭제할 폴더가 없습니다.\");\n      return;\n    }\n    try {\n      const headers = {};\n      const response = await folderDelete(headers, lastFolder.id);\n      console.log(\"폴더 삭제 성공:\", response);\n      // 폴더 삭제 후 갱신된 폴더 리스트 가져오기\n      handleFolderGet();\n    } catch (err) {\n      console.log(\"폴더 삭제 실패!\");\n    } finally {\n      console.log(\"로딩 종료\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo\",\n    src: \"example.png\",\n    alt: \"logo\",\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"sign-main-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImagePlaceholder, {\n    width: 362,\n    height: 320,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"sign-slogan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uBA54\\uC778 \\uC2AC\\uB85C\\uAC74 \\uCF54\\uBA58\\uD2B8\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"\\uC11C\\uBE44\\uC2A4 \\uC11C\\uBE0C \\uC2AC\\uB85C\\uAC74 \\uBC0F \\uAE30\\uD0C0 \\uC124\\uBA85\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, lastFolder ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"\\uB9C8\\uC9C0\\uB9C9 \\uD3F4\\uB354: \", lastFolder.name) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"\\uD3F4\\uB354\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"\\uC804\\uCCB4 \\uD3F4\\uB354 \\uB9AC\\uC2A4\\uD2B8\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, folderList && folderList.length > 0 ? folderList.map(folder => /*#__PURE__*/React.createElement(\"li\", {\n    key: folder.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, folder.name || \"Unnamed Folder\")) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"\\uD3F4\\uB354\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-text-button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Google \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\",\n    onClick: handleGoogleLogin // Google 로그인 핸들러 연결\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uCD94\\uAC00\",\n    onClick: handleFolderPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC870\\uD68C\",\n    onClick: handleFolderGet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"\\uD3F4\\uB354\\uC0AD\\uC81C\",\n    onClick: handleFolderDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default SignPage;","map":{"version":3,"names":["React","useState","useDispatch","useSelector","setTokens","setFolderList","Button","tempLogin","folderGet","folderPost","folderDelete","ImagePlaceholder","width","height","placeholderStyle","createElement","className","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SignPage","dispatch","accessToken","refreshToken","state","auth","folderList","folder","floderList","lastFolder","length","handleGoogleLogin","headers","email","encodeURIComponent","name","response","console","log","err","handleFolderPost","error","handleFolderGet","handleFolderDelete","id","src","alt","onClick","window","location","reload","map","key","label"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/SignPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTokens } from \"../redux/actions/authActions\";\nimport { setFolderList } from \"../redux/actions/folderActions\"; // 폴더 관련 액션 임포트\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { tempLogin } from \"../services/loginService\"; // Google 로그인 서비스 호출\nimport { folderGet, folderPost, folderDelete } from \"../services/folderService\";\n\nconst ImagePlaceholder = ({ width, height }) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div className=\"image-placeholder\" style={placeholderStyle}>\n      이미지 자리 표시지\n    </div>\n  );\n};\n\nconst SignPage = () => {\n  const dispatch = useDispatch();\n  const { accessToken, refreshToken } = useSelector((state) => state.auth);\n  const folderList = useSelector((state) => state.folder.floderList); // 폴더 리스트 가져오기\n  const lastFolder = folderList.length > 0 ? folderList[folderList.length - 1] : null;\n\n  // 임시 로그인 함수 호출 핸들러\n  const handleGoogleLogin = async () => {\n    try {\n      const headers = {\n        email: encodeURIComponent(\"mg0454@gmail.com\"),\n        name: encodeURIComponent(\"성명근\"),\n      };\n      const response = await tempLogin(headers);\n\n      console.log(\"Google Login Response:\", response);\n\n      if (response && response.accessToken && response.refreshToken) {\n        dispatch(setTokens(response.accessToken, response.refreshToken));\n        console.log(\"로그인 성공!\");\n      } else {\n        console.log(\"로그인 응답에 문제가 있습니다.\");\n      }\n    } catch (err) {\n      console.log(\"Login Error:\", err);\n    } finally {\n      console.log(\"로딩 종료\");\n    }\n  };\n\n  const handleFolderPost = async () => {\n    try {\n      const headers = {\n        name: encodeURIComponent(\"아무개\"),\n      };\n      const response = await folderPost(headers);\n      console.log(\"folderPost response:\", response);\n\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList)); // 상태 갱신\n      }\n    } catch (err) {\n      console.error(\"폴더 추가 실패:\", err);\n    }\n  };\n\n  const handleFolderGet = async () => {\n    try {\n      const response = await folderGet();\n\n      if (response && response.floderList) {\n        dispatch(setFolderList(response.floderList)); // Redux에 폴더 리스트 저장\n      }\n      console.log(\"folder:\", response);\n    } catch (err) {\n      console.log(\"폴더 조회 실패!\");\n    } finally {\n      console.log(\"로딩 종료\");\n    }\n  };\n\n  const handleFolderDelete = async () => {\n    if (!lastFolder) {\n      console.log(\"삭제할 폴더가 없습니다.\");\n      return;\n    }\n\n    try {\n      const headers = {};\n      const response = await folderDelete(headers, lastFolder.id);\n\n      console.log(\"폴더 삭제 성공:\", response);\n      // 폴더 삭제 후 갱신된 폴더 리스트 가져오기\n      handleFolderGet(); \n    } catch (err) {\n      console.log(\"폴더 삭제 실패!\");\n    } finally {\n      console.log(\"로딩 종료\");\n    }\n  };\n\n  return (\n    <div className=\"signpage\">\n      <header className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"example.png\"\n          alt=\"logo\"\n          onClick={() => window.location.reload()}\n        />\n      </header>\n      <main className=\"sign-main-style\">\n        <div className=\"image-section\">\n          <ImagePlaceholder width={362} height={320} />\n        </div>\n        <div className=\"text-section\">\n          <h1 className=\"sign-slogan\">서비스 메인 슬로건 코멘트</h1>\n          <p>서비스 서브 슬로건 및 기타 설명</p>\n\n          {/* 마지막 폴더 출력 */}\n          <div>\n            {lastFolder ? (\n              <p>마지막 폴더: {lastFolder.name}</p>\n            ) : (\n              <p>폴더가 없습니다.</p>\n            )}\n          </div>\n\n          {/* 폴더 리스트 출력 */}\n          <div>\n            <h3>전체 폴더 리스트</h3>\n            <ul>\n              {folderList && folderList.length > 0 ? (\n                folderList.map((folder) => (\n                  <li key={folder.id}>{folder.name || \"Unnamed Folder\"}</li>\n                ))\n              ) : (\n                <li>폴더가 없습니다.</li>\n              )}\n            </ul>\n          </div>\n\n          <div className=\"sign-text-button-wrapper\">\n            <Button\n              label=\"Google 계정으로 로그인\"\n              onClick={handleGoogleLogin} // Google 로그인 핸들러 연결\n            />\n            <Button label=\"폴더추가\" onClick={handleFolderPost} />\n            <Button label=\"폴더조회\" onClick={handleFolderGet} />\n            <Button label=\"폴더삭제\" onClick={handleFolderDelete} />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}