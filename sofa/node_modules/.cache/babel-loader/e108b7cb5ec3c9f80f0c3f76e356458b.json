{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/components/Dropdown/Dropdown.js\";\nimport React, { useState } from \"react\";\nimport \"./Dropdown.css\";\nconst Dropdown = ({\n  className,\n  options,\n  type,\n  onSelect,\n  label\n}) => {\n  const [selectedValue, setSelectedValue] = useState(className === \"sorting\" ? options[0] : \"\"); //선택된 값 상태 관리\n  const [isOpen, setIsOpen] = useState(false);\n  const handleChange = e => {\n    const value = e.target.value;\n    setSelectedValue(value);\n    if (value) {\n      if (type === \"TAG\" && onSelect) {\n        onSelect(value);\n        setSelectedValue(\"\"); //tag 선택 후, 드롭다운 초기화\n      } else if (className === \"sorting\" && onSelect) {\n        onSelect(value); // onSelect 호출만 하고 초기화는 하지 않음\n      }\n    }\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: `dropdown ${className}`,\n    value: selectedValue,\n    onChange: handleChange,\n    onClick: toggleDropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, label), options.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, option))));\n};\nexport default Dropdown;","map":{"version":3,"names":["React","useState","Dropdown","className","options","type","onSelect","label","selectedValue","setSelectedValue","isOpen","setIsOpen","handleChange","e","value","target","toggleDropdown","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","disabled","hidden","map","option","index","key"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/components/Dropdown/Dropdown.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Dropdown.css\";\n\nconst Dropdown = ({ className, options, type, onSelect, label }) => {\n  const [selectedValue, setSelectedValue] = useState(\n    className === \"sorting\" ? options[0] : \"\"\n  ); //선택된 값 상태 관리\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setSelectedValue(value);\n\n    if (value) {\n      if (type === \"TAG\" && onSelect) {\n        onSelect(value);\n        setSelectedValue(\"\"); //tag 선택 후, 드롭다운 초기화\n      } else if (className === \"sorting\" && onSelect) {\n        onSelect(value); // onSelect 호출만 하고 초기화는 하지 않음\n      }\n    }\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div>\n      <select\n        className={`dropdown ${className}`}\n        value={selectedValue}\n        onChange={handleChange}\n        onClick={toggleDropdown}\n      >\n        <option value=\"\" disabled hidden>\n          {label}\n        </option>\n        {options.map((option, index) => (\n          <option key={index} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n      {/* <div className={`dropdown-menu ${isOpen ? \"show\" : \"\"}`}>\n        {options.map((option, index) => (\n          <div key={index} className=\"option\">\n            {option}\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAEvB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAClE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAChDE,SAAS,KAAK,SAAS,GAAGC,OAAO,CAAC,CAAC,CAAC,GAAG,EACzC,CAAC,CAAC,CAAC;EACH,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BL,gBAAgB,CAACK,KAAK,CAAC;IAEvB,IAAIA,KAAK,EAAE;MACT,IAAIT,IAAI,KAAK,KAAK,IAAIC,QAAQ,EAAE;QAC9BA,QAAQ,CAACQ,KAAK,CAAC;QACfL,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;MACxB,CAAC,MAAM,IAAIN,SAAS,KAAK,SAAS,IAAIG,QAAQ,EAAE;QAC9CA,QAAQ,CAACQ,KAAK,CAAC,CAAC,CAAC;MACnB;IACF;EACF,CAAC;EACD,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BL,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEV,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEvB,KAAA,CAAAiB,aAAA;IACEd,SAAS,EAAE,YAAYA,SAAS,EAAG;IACnCW,KAAK,EAAEN,aAAc;IACrBgB,QAAQ,EAAEZ,YAAa;IACvBa,OAAO,EAAET,cAAe;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAExBvB,KAAA,CAAAiB,aAAA;IAAQH,KAAK,EAAC,EAAE;IAACY,QAAQ;IAACC,MAAM;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BhB,KACK,CAAC,EACRH,OAAO,CAACwB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB9B,KAAA,CAAAiB,aAAA;IAAQc,GAAG,EAAED,KAAM;IAAChB,KAAK,EAAEe,MAAO;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/BM,MACK,CACT,CACK,CAQL,CAAC;AAEV,CAAC;AAED,eAAe3B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}