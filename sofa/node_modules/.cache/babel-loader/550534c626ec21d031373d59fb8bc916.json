{"ast":null,"code":"// src/utils/apiClient.js\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL; // 환경 변수에서 URL 가져오기\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  // baseURL 설정\n  timeout: 10000,\n  // 요청 타임아웃 (선택 사항)\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// GET 요청을 위한 함수\nexport const get = async (url, params = {}, headers = {}) => {\n  const response = await apiClient.get(url, {\n    params,\n    headers\n  });\n  return response.data;\n};\n\n// POST 요청을 위한 함수\nexport const post = async (url, data = {}, headers = {}) => {\n  try {\n    // 헤더 값 인코딩 처리\n    Object.keys(headers).forEach(key => {\n      headers[key] = encodeURIComponent(headers[key]);\n    });\n    const response = await apiClient.post(url, data, {\n      headers\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to make POST request:\", error);\n    throw error;\n  }\n};\n\n// PUT 요청을 위한 함수\nexport const put = async (url, data = {}, headers = {}) => {\n  const response = await apiClient.put(url, data, {\n    headers\n  });\n  return response.data;\n};\n\n// DELETE 요청을 위한 함수 (del 함수 추가)\nexport const del = async (url, headers = {}) => {\n  const response = await apiClient.delete(url, {\n    headers\n  });\n  return response.data;\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","apiClient","create","baseURL","timeout","headers","get","url","params","response","data","post","Object","keys","forEach","key","encodeURIComponent","error","console","put","del","delete"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/services/apiClient.js"],"sourcesContent":["// src/utils/apiClient.js\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL; // 환경 변수에서 URL 가져오기\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL, // baseURL 설정\n  timeout: 10000, // 요청 타임아웃 (선택 사항)\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// GET 요청을 위한 함수\nexport const get = async (url, params = {}, headers = {}) => {\n  const response = await apiClient.get(url, { params, headers });\n  return response.data;\n};\n\n// POST 요청을 위한 함수\nexport const post = async (url, data = {}, headers = {}) => {\n  try {\n    // 헤더 값 인코딩 처리\n    Object.keys(headers).forEach((key) => {\n      headers[key] = encodeURIComponent(headers[key]);\n    });\n\n    const response = await apiClient.post(url, data, { headers });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to make POST request:\", error);\n    throw error;\n  }\n};\n\n// PUT 요청을 위한 함수\nexport const put = async (url, data = {}, headers = {}) => {\n  const response = await apiClient.put(url, data, { headers });\n  return response.data;\n};\n\n// DELETE 요청을 위한 함수 (del 함수 추가)\nexport const del = async (url, headers = {}) => {\n  const response = await apiClient.delete(url, { headers });\n  return response.data;\n};\n\nexport default apiClient;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAC,CAAC;;AAEzD,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EAAE;EACvBO,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,GAAG,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAEH,OAAO,GAAG,CAAC,CAAC,KAAK;EAC3D,MAAMI,QAAQ,GAAG,MAAMR,SAAS,CAACK,GAAG,CAACC,GAAG,EAAE;IAAEC,MAAM;IAAEH;EAAQ,CAAC,CAAC;EAC9D,OAAOI,QAAQ,CAACC,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,IAAI,GAAG,MAAAA,CAAOJ,GAAG,EAAEG,IAAI,GAAG,CAAC,CAAC,EAAEL,OAAO,GAAG,CAAC,CAAC,KAAK;EAC1D,IAAI;IACF;IACAO,MAAM,CAACC,IAAI,CAACR,OAAO,CAAC,CAACS,OAAO,CAAEC,GAAG,IAAK;MACpCV,OAAO,CAACU,GAAG,CAAC,GAAGC,kBAAkB,CAACX,OAAO,CAACU,GAAG,CAAC,CAAC;IACjD,CAAC,CAAC;IAEF,MAAMN,QAAQ,GAAG,MAAMR,SAAS,CAACU,IAAI,CAACJ,GAAG,EAAEG,IAAI,EAAE;MAAEL;IAAQ,CAAC,CAAC;IAC7D,OAAOI,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,GAAG,GAAG,MAAAA,CAAOZ,GAAG,EAAEG,IAAI,GAAG,CAAC,CAAC,EAAEL,OAAO,GAAG,CAAC,CAAC,KAAK;EACzD,MAAMI,QAAQ,GAAG,MAAMR,SAAS,CAACkB,GAAG,CAACZ,GAAG,EAAEG,IAAI,EAAE;IAAEL;EAAQ,CAAC,CAAC;EAC5D,OAAOI,QAAQ,CAACC,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,GAAG,GAAG,MAAAA,CAAOb,GAAG,EAAEF,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,MAAMI,QAAQ,GAAG,MAAMR,SAAS,CAACoB,MAAM,CAACd,GAAG,EAAE;IAAEF;EAAQ,CAAC,CAAC;EACzD,OAAOI,QAAQ,CAACC,IAAI;AACtB,CAAC;AAED,eAAeT,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}