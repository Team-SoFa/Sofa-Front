{"ast":null,"code":"var _jsxFileName = \"/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/FolderPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\";\nimport \"../components/Layout/main-layout.css\";\nconst FolderPage = ({\n  bookmarks,\n  onDeleteBookmark\n}) => {\n  const [folderName, setFolderName] = useState(\"\"); //폴더명\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [sortingOption, setSortingOption] = useState(\"최근저장\"); //정렬 기준\n  const [sortingDirOption, setSortingDirOption] = useState(\"오름차순\"); //정렬 방향\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedBookmark, setSelectedBookmark] = useState(null);\n  const sortingOpt = [\"최근저장\", \"오래된저장\", \"이름순\"].map(item => ({\n    label: item,\n    content: item\n  }));\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"].map(item => ({\n    label: item,\n    content: item\n  }));\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // 폴더명 API 받아오기\n        const folderNameData = {\n          label: \"폴더명\"\n        };\n        setFolderName(folderNameData.label);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handleDelete = id => onDeleteBookmark(id);\n  const handleEdit = id => {\n    //추후 수정 기능 코드 추가\n  };\n\n  // SORTING\n  const handleSortingSelect = option => {\n    setSortingOption(option.content);\n  };\n  const handleSortingDirSelect = option => {\n    setSortingDirOption(option.content);\n  };\n  const handleBookmarkClick = bookmark => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `main-page ${isMenuOpen ? \"menu-open\" : \"\"} ${selectedBookmark ? \"show-detail\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    toggleMenu: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SideMenu, {\n    isOpen: isMenuOpen,\n    toggleMenu: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, folderName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sorting-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"sorting\",\n    label: \"\\uCD5C\\uADFC \\uC800\\uC7A5\",\n    options: sortingOpt,\n    onSelect: handleSortingSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"sorting\",\n    label: \"\\uC624\\uB984\\uCC28\\uC21C\",\n    options: sortingDirOpt,\n    onSelect: handleSortingDirSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ShowLinkCard, {\n    bookmarks: bookmarks,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    onLinkCardClick: handleBookmarkClick // 북마크 클릭 핸들러 전달\n    ,\n    sideMenuOpen: isMenuOpen,\n    bookmarkDetailOpen: selectedBookmark,\n    sortingOption: sortingOption,\n    sortingDirOption: sortingDirOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), selectedBookmark && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bookmark-detail-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BookmarkDetail, {\n    bookmark: selectedBookmark,\n    onEdit: () => console.log(\"Edit clicked\"),\n    onDelete: () => console.log(\"Delete clicked\"),\n    onClose: handleBookmarkClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })));\n};\nexport default FolderPage;","map":{"version":3,"names":["React","useState","useEffect","Header","SideMenu","ShowLinkCard","Dropdown","BookmarkDetail","FolderPage","bookmarks","onDeleteBookmark","folderName","setFolderName","loading","setLoading","sortingOption","setSortingOption","sortingDirOption","setSortingDirOption","isMenuOpen","setIsMenuOpen","selectedBookmark","setSelectedBookmark","sortingOpt","map","item","label","content","sortingDirOpt","toggleMenu","fetchUserInfo","folderNameData","error","console","handleDelete","id","handleEdit","handleSortingSelect","option","handleSortingDirSelect","handleBookmarkClick","bookmark","log","handleBookmarkClose","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","options","onSelect","onDelete","onEdit","onLinkCardClick","sideMenuOpen","bookmarkDetailOpen","onClose"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/pages/FolderPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\";\n\nimport \"../components/Layout/main-layout.css\";\n\nconst FolderPage = ({ bookmarks, onDeleteBookmark }) => {\n  const [folderName, setFolderName] = useState(\"\"); //폴더명\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [sortingOption, setSortingOption] = useState(\"최근저장\"); //정렬 기준\n  const [sortingDirOption, setSortingDirOption] = useState(\"오름차순\"); //정렬 방향\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedBookmark, setSelectedBookmark] = useState(null);\n\n  const sortingOpt = [\"최근저장\", \"오래된저장\", \"이름순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // 폴더명 API 받아오기\n        const folderNameData = { label: \"폴더명\" };\n        setFolderName(folderNameData.label);\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n  const handleEdit = (id) => {\n    //추후 수정 기능 코드 추가\n  };\n\n  // SORTING\n  const handleSortingSelect = (option) => {\n    setSortingOption(option.content);\n  };\n  const handleSortingDirSelect = (option) => {\n    setSortingDirOption(option.content);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  return (\n    <div\n      className={`main-page ${isMenuOpen ? \"menu-open\" : \"\"} ${\n        selectedBookmark ? \"show-detail\" : \"\"\n      }`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section>\n        <h3>{folderName}</h3>\n\n        <div className=\"sorting-options\">\n          <Dropdown\n            className=\"sorting\"\n            label=\"최근 저장\"\n            options={sortingOpt}\n            onSelect={handleSortingSelect}\n          />\n          <Dropdown\n            className=\"sorting\"\n            label=\"오름차순\"\n            options={sortingDirOpt}\n            onSelect={handleSortingDirSelect}\n          />\n        </div>\n\n        <ShowLinkCard\n          bookmarks={bookmarks}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n          onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n          sideMenuOpen={isMenuOpen}\n          bookmarkDetailOpen={selectedBookmark}\n          sortingOption={sortingOption}\n          sortingDirOption={sortingDirOption}\n        />\n      </section>\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FolderPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,cAAc,MAAM,uCAAuC;AAElE,OAAO,sCAAsC;AAE7C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAiB,CAAC,KAAK;EACtD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;EAClE,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMsB,UAAU,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,CAAC,CAACC,GAAG,CAAEC,IAAI,KAAM;IACzDC,KAAK,EAAED,IAAI;IACXE,OAAO,EAAEF;EACX,CAAC,CAAC,CAAC;EACH,MAAMG,aAAa,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAACJ,GAAG,CAAEC,IAAI,KAAM;IACpDC,KAAK,EAAED,IAAI;IACXE,OAAO,EAAEF;EACX,CAAC,CAAC,CAAC;EAEH,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBT,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,cAAc,GAAG;UAAEL,KAAK,EAAE;QAAM,CAAC;QACvCd,aAAa,CAACmB,cAAc,CAACL,KAAK,CAAC;QAEnCZ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDlB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDgB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAIC,EAAE,IAAKzB,gBAAgB,CAACyB,EAAE,CAAC;EACjD,MAAMC,UAAU,GAAID,EAAE,IAAK;IACzB;EAAA,CACD;;EAED;EACA,MAAME,mBAAmB,GAAIC,MAAM,IAAK;IACtCtB,gBAAgB,CAACsB,MAAM,CAACX,OAAO,CAAC;EAClC,CAAC;EACD,MAAMY,sBAAsB,GAAID,MAAM,IAAK;IACzCpB,mBAAmB,CAACoB,MAAM,CAACX,OAAO,CAAC;EACrC,CAAC;EAED,MAAMa,mBAAmB,GAAIC,QAAQ,IAAK;IACxCR,OAAO,CAACS,GAAG,CAAC,mBAAmB,EAAED,QAAQ,CAAC;IAC1CnB,mBAAmB,CAACmB,QAAQ,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCrB,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEtB,KAAA,CAAA4C,aAAA;IACEC,SAAS,EAAE,aAAa1B,UAAU,GAAG,WAAW,GAAG,EAAE,IACnDE,gBAAgB,GAAG,aAAa,GAAG,EAAE,EACpC;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEHnD,KAAA,CAAA4C,aAAA,CAACzC,MAAM;IAAC0B,UAAU,EAAEA,UAAW;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAClCnD,KAAA,CAAA4C,aAAA,CAACxC,QAAQ;IAACgD,MAAM,EAAEjC,UAAW;IAACU,UAAU,EAAEA,UAAW;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACxDnD,KAAA,CAAA4C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEnD,KAAA,CAAA4C,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKxC,UAAe,CAAC,eAErBX,KAAA,CAAA4C,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BnD,KAAA,CAAA4C,aAAA,CAACtC,QAAQ;IACPuC,SAAS,EAAC,SAAS;IACnBnB,KAAK,EAAC,2BAAO;IACb2B,OAAO,EAAE9B,UAAW;IACpB+B,QAAQ,EAAEjB,mBAAoB;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/B,CAAC,eACFnD,KAAA,CAAA4C,aAAA,CAACtC,QAAQ;IACPuC,SAAS,EAAC,SAAS;IACnBnB,KAAK,EAAC,0BAAM;IACZ2B,OAAO,EAAEzB,aAAc;IACvB0B,QAAQ,EAAEf,sBAAuB;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClC,CACE,CAAC,eAENnD,KAAA,CAAA4C,aAAA,CAACvC,YAAY;IACXI,SAAS,EAAEA,SAAU;IACrB8C,QAAQ,EAAErB,YAAa;IACvBsB,MAAM,EAAEpB,UAAW;IACnBqB,eAAe,EAAEjB,mBAAoB,CAAC;IAAA;IACtCkB,YAAY,EAAEvC,UAAW;IACzBwC,kBAAkB,EAAEtC,gBAAiB;IACrCN,aAAa,EAAEA,aAAc;IAC7BE,gBAAgB,EAAEA,gBAAiB;IAAA6B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACpC,CACM,CAAC,EACT9B,gBAAgB,iBACfrB,KAAA,CAAA4C,aAAA;IAAKC,SAAS,EAAC,2BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxCnD,KAAA,CAAA4C,aAAA,CAACrC,cAAc;IACbkC,QAAQ,EAAEpB,gBAAiB;IAC3BmC,MAAM,EAAEA,CAAA,KAAMvB,OAAO,CAACS,GAAG,CAAC,cAAc,CAAE;IAC1Ca,QAAQ,EAAEA,CAAA,KAAMtB,OAAO,CAACS,GAAG,CAAC,gBAAgB,CAAE;IAC9CkB,OAAO,EAAEjB,mBAAoB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CACE,CAEJ,CAAC;AAEV,CAAC;AAED,eAAe3C,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}