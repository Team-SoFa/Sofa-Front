{"ast":null,"code":"import { tokenPost, tokenGet, tokenDel, tokenPut, post } from \"./apiClient\";\nexport const folderGet = async params => {\n  try {\n    const response = await tokenGet(\"/folder\", params, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderPost = async data => {\n  try {\n    console.log(\"folderPost\", data);\n    const response = await tokenPost(\"/folder\", data, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderDelete = async (headers, id) => {\n  try {\n    const response = await tokenDel(\"/folder/\" + id, {\n      headers\n    });\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderPut = async (data, id) => {\n  try {\n    const response = await tokenPut(\"/folder/\" + id, data);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["tokenPost","tokenGet","tokenDel","tokenPut","post","folderGet","params","response","error","console","folderPost","data","log","folderDelete","headers","id","folderPut"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/services/folderService.js"],"sourcesContent":["import {tokenPost, tokenGet, tokenDel, tokenPut, post} from \"./apiClient\";\n  \nexport const folderGet = async (params) => {\n  try {\n    const response = await tokenGet(\"/folder\", params, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n\nexport const folderPost = async (data) => {\n  try {\n    console.log(\"folderPost\", data);\n\n    const response = await tokenPost(\"/folder\", data, {});\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n  \nexport const folderDelete = async (headers, id) => {\n  try {\n    const response = await tokenDel(\"/folder/\"+id, { headers });\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n\nexport const folderPut = async (data, id) => {\n  try {\n    const response = await tokenPut(\"/folder/\"+id, data);\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,QAAO,aAAa;AAEzE,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAM,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAAC,SAAS,EAAEK,MAAM,EAAE,CAAC,CAAC,CAAC;IACtD,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACFF,OAAO,CAACG,GAAG,CAAC,YAAY,EAAED,IAAI,CAAC;IAE/B,MAAMJ,QAAQ,GAAG,MAAMP,SAAS,CAAC,SAAS,EAAEW,IAAI,EAAE,CAAC,CAAC,CAAC;IACrD,OAAOJ,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAOC,OAAO,EAAEC,EAAE,KAAK;EACjD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,QAAQ,CAAC,UAAU,GAACa,EAAE,EAAE;MAAED;IAAQ,CAAC,CAAC;IAC3D,OAAOP,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG,MAAAA,CAAOL,IAAI,EAAEI,EAAE,KAAK;EAC3C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,QAAQ,CAAC,UAAU,GAACY,EAAE,EAAEJ,IAAI,CAAC;IACpDF,OAAO,CAACG,GAAG,CAACL,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}