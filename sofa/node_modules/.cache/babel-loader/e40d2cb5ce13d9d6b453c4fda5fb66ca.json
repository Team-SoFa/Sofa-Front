{"ast":null,"code":"import { tokenPost, tokenGet, tokenDel } from \"./apiClient\";\nexport const folderPost = async headers => {\n  try {\n    const response = await tokenPost(\"/folder\", {}, {\n      headers\n    });\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderGet = async headers => {\n  try {\n    const response = await tokenGet(\"/folder\", {}, {\n      headers\n    });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderDelete = async (headers, id) => {\n  try {\n    const response = await tokenDel(\"/folder/\" + id, {}, {\n      headers\n    });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\nexport const folderPut = async (headers, name) => {\n  try {\n    const response = await tokenDel(\"/folder/\" + id, {}, {\n      headers\n    });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["tokenPost","tokenGet","tokenDel","folderPost","headers","response","error","console","folderGet","log","folderDelete","id","folderPut","name"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/services/folderService.js"],"sourcesContent":["import {tokenPost, tokenGet, tokenDel} from \"./apiClient\";\n\nexport const folderPost = async (headers) => {\n    try {\n      const response = await tokenPost(\"/folder\", {}, { headers });\n      return response;\n    } catch (error) {\n      console.error(\"folderPost failed:\", error);\n      throw error;\n    }\n  };\n  \nexport const folderGet = async (headers) => {\n  try {\n    const response = await tokenGet(\"/folder\", {}, { headers });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n  \nexport const folderDelete = async (headers, id) => {\n  try {\n    const response = await tokenDel(\"/folder/\"+id, {}, { headers });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n\nexport const folderPut = async (headers, name) => {\n  try {\n    const response = await tokenDel(\"/folder/\"+id, {}, { headers });\n    console.log(response);\n    return response;\n  } catch (error) {\n    console.error(\"folderPost failed:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,QAAO,aAAa;AAEzD,OAAO,MAAMC,UAAU,GAAG,MAAOC,OAAO,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE;MAAEI;IAAQ,CAAC,CAAC;IAC5D,OAAOC,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAEH,OAAO,MAAME,SAAS,GAAG,MAAOJ,OAAO,IAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE;MAAEG;IAAQ,CAAC,CAAC;IAC3DG,OAAO,CAACE,GAAG,CAACJ,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAON,OAAO,EAAEO,EAAE,KAAK;EACjD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,QAAQ,CAAC,UAAU,GAACS,EAAE,EAAE,CAAC,CAAC,EAAE;MAAEP;IAAQ,CAAC,CAAC;IAC/DG,OAAO,CAACE,GAAG,CAACJ,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,SAAS,GAAG,MAAAA,CAAOR,OAAO,EAAES,IAAI,KAAK;EAChD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,QAAQ,CAAC,UAAU,GAACS,EAAE,EAAE,CAAC,CAAC,EAAE;MAAEP;IAAQ,CAAC,CAAC;IAC/DG,OAAO,CAACE,GAAG,CAACJ,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}