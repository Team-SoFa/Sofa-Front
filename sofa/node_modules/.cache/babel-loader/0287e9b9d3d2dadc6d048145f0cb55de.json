{"ast":null,"code":"// src/services/loginService.js\nimport { get, post, put, del } from \"./apiClient\";\n\n// Google 로그인 URL을 얻는 API 호출\nexport const googleOAuthRedirectUriGet = async (headers = {}) => {\n  try {\n    const url = await get('/login/oauth2/google', {}, {}); // GET 요청 보내기\n    return url; // 로그인 URL 반환\n  } catch (error) {\n    console.error('Google 로그인 URL을 가져오는 데 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// Google OAuth2 콜백 처리\nexport const googleOAuthLoginGet = async (headers = {}) => {\n  try {\n    const url = await get('/login/oauth2/code/google', {}, {}); // GET 요청 보내기\n    return url; // 로그인 URL 반환\n  } catch (error) {\n    console.error('Google 로그인 실패', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// 임시 로그인 함수 (accessToken, refreshToken을 포함한 응답 반환)\nexport const tempLogin = async data => {\n  try {\n    console.log(\"tempLogin:\", data);\n    const response = await post(\"/login/oauth2/signUpOrLogin\", data, {});\n    console.log('tempLogin response:', response); // 응답을 제대로 출력해보세요\n\n    // 응답 데이터에서 필요한 정보 반환\n    if (response) {\n      return response; // response.data에 accessToken과 refreshToken이 포함되어 있음\n    } else {\n      throw new Error('응답 데이터가 없습니다.');\n    }\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};","map":{"version":3,"names":["get","post","put","del","googleOAuthRedirectUriGet","headers","url","error","console","googleOAuthLoginGet","tempLogin","data","log","response","Error"],"sources":["/Users/mingmaengmung/Documents/GitHub/Sofa-Front/sofa/src/services/loginService.js"],"sourcesContent":["// src/services/loginService.js\nimport { get, post, put, del} from \"./apiClient\";\n\n// Google 로그인 URL을 얻는 API 호출\nexport const googleOAuthRedirectUriGet = async (headers = {}) => {\n  try {\n    const url = await get('/login/oauth2/google', {}, {}); // GET 요청 보내기\n    return url; // 로그인 URL 반환\n  } catch (error) {\n    console.error('Google 로그인 URL을 가져오는 데 실패했습니다:', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// Google OAuth2 콜백 처리\nexport const googleOAuthLoginGet = async (headers = {}) => {\n  try {\n    const url = await get('/login/oauth2/code/google', {}, {}); // GET 요청 보내기\n    return url; // 로그인 URL 반환\n  } catch (error) {\n    console.error('Google 로그인 실패', error);\n    throw error; // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};\n\n// 임시 로그인 함수 (accessToken, refreshToken을 포함한 응답 반환)\nexport const tempLogin = async (data) => {\n  try {\n    console.log(\"tempLogin:\", data);\n\n    const response = await post(\"/login/oauth2/signUpOrLogin\", data, {});\n    console.log('tempLogin response:', response);  // 응답을 제대로 출력해보세요\n\n    // 응답 데이터에서 필요한 정보 반환\n    if (response) {\n      return response;  // response.data에 accessToken과 refreshToken이 포함되어 있음\n    } else {\n      throw new Error('응답 데이터가 없습니다.');\n    }\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    throw error;  // 에러 발생 시 호출한 곳으로 에러 전달\n  }\n};"],"mappings":"AAAA;AACA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAO,aAAa;;AAEhD;AACA,OAAO,MAAMC,yBAAyB,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC/D,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,GAAG,CAAC,sBAAsB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,OAAOM,GAAG,CAAC,CAAC;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAME,mBAAmB,GAAG,MAAAA,CAAOJ,OAAO,GAAG,CAAC,CAAC,KAAK;EACzD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMN,GAAG,CAAC,2BAA2B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAOM,GAAG,CAAC,CAAC;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOC,IAAI,IAAK;EACvC,IAAI;IACFH,OAAO,CAACI,GAAG,CAAC,YAAY,EAAED,IAAI,CAAC;IAE/B,MAAME,QAAQ,GAAG,MAAMZ,IAAI,CAAC,6BAA6B,EAAEU,IAAI,EAAE,CAAC,CAAC,CAAC;IACpEH,OAAO,CAACI,GAAG,CAAC,qBAAqB,EAAEC,QAAQ,CAAC,CAAC,CAAE;;IAE/C;IACA,IAAIA,QAAQ,EAAE;MACZ,OAAOA,QAAQ,CAAC,CAAE;IACpB,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAClC;EACF,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAMA,KAAK,CAAC,CAAE;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}