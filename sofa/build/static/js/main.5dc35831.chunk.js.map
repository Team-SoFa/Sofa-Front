{"version":3,"sources":["components/OutsideClick.js","components/Button/Button.js","components/Dropdown/Dropdown.js","components/Textfield/Textfield.js","components/Modal/Modal.js","assets/icon/MenuIcon.js","assets/icon/DownIcon.js","assets/icon/SearchIcon.js","assets/icon/AlarmLineIcon.js","assets/icon/AlarmFilledIcon.js","components/Layout/Header.js","components/Layout/Footer.js","components/Accordion/Accordion.js","pages/LandingPage.js","services/apiClient.js","services/loginService.js","pages/SignPage.js","components/SideMenu/SideMenu.js","components/LinkCard/LinkCard.js","components/LinkCard/ShowLinkCard.js","components/LinkCard/BookmarkDetail.js","pages/RemovedItemsPage.js","pages/FolderPage.js","pages/HomePage.js","components/LinkCard/bookmarks.js","pages/TermsPage.js","pages/PrivacyPolicy.js","App.js","index.js"],"names":["OutsideClick","el","initialState","isActive","setIsActive","useState","useEffect","pageClickEvent","e","current","contains","target","window","addEventListener","removeEventListener","Button","_ref","label","onClick","className","Icon","imgSrc","imgAlt","React","createElement","Fragment","aria-label","src","alt","Dropdown","options","onSelect","onDelete","onMouseEnter","onMouseLeave","dropdownRef","useRef","isOpen","setIsOpen","selectedValue","setSelectedValue","handleSelect","value","content","ref","toggleDropdown","length","img","map","option","index","key","stopPropagation","TextField","forwardRef","onChange","placeholder","type","required","recentSearches","onSearchSelect","onSearchDelete","isDropdownOpen","setIsDropdownOpen","onFocus","handleFocus","handleClick","selected","Modal","onClose","children","modalRef","MenuIcon","width","height","viewBox","fill","xmlns","d","DownIcon","SearchIcon","AlarmLineIcon","AlarmFilledIcon","Header","toggleMenu","location","useLocation","alarmOption","setAlarmOption","folderOption","setFolderOption","tagOption","setTagOption","searchValue","setSearchValue","isHovered","setIsHovered","setRecentSearches","folderOpt","item","tagsOpt","alarmOptions","headerStyle","backgroundColor","paddingTop","isModalOpen","setIsModalOpen","style","pathname","event","searchToDelete","updatedSearches","filter","search","handleMouseEnter","handleMouseLeave","openModal","closeModal","reload","Link","to","Footer","Accordion","title","toggleAccordion","LandingPage","href","rel","apiClient","axios","create","baseURL","process","timeout","headers","ImagePlaceholder","placeholderStyle","SignPage","async","googleLoginUrl","console","log","defaults","get","data","error","getGoogleLoginUrl","alert","SideMenu","currentPath","path","LinkCard","bookmark","onEdit","hover","setHover","id","open","url","ShowLinkCard","bookmarks","sideMenuOpen","bookmarkDetailOpen","onLinkCardClick","sortingOption","sortingDirOption","gridColumns","setGridColumns","calculateGridColumns","windowWidth","innerWidth","columns","Math","floor","parseFloat","getComputedStyle","document","documentElement","fontSize","sortedBookmarks","sortBookmarks","sortingDir","sorted","sort","a","b","localeCompare","reverse","gridTemplateColumns","BookmarkDetail","tag","RemovedItemsPage","onAddBookmark","onDeleteBookmark","loading","setLoading","isMenuOpen","setIsMenuOpen","selectedBookmark","setSelectedBookmark","setSortingOption","setSortingDirOption","sortingOpt","sortingDirOpt","handleBookmarkClose","FolderPage","folderName","setFolderName","fetchUserInfo","HomePage","username","setUsername","mostPopularTags","setMostPopularTags","nickname","handleDelete","handleEdit","handleAddBookmark","newBookmark","handleBookmarkClick","renderSection","TermsPage","PrivacyPolicy","App","setBookmarks","initialBookmarks","prevBookmarks","Date","now","handleDeleteBookmark","Routes","Route","element","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.5dc35831.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const OutsideClick = (el, initialState) => {\n  const [isActive, setIsActive] = useState(initialState);\n\n  useEffect(() => {\n    const pageClickEvent = (e) => {\n      if (el.current !== null && !el.current.contains(e.target)) {\n        setIsActive(false); // 외부를 클릭하면 닫힘\n      }\n    };\n\n    if (isActive) {\n      window.addEventListener(\"click\", pageClickEvent);\n    }\n\n    return () => {\n      window.removeEventListener(\"click\", pageClickEvent);\n    };\n  }, [isActive, el]);\n\n  return [isActive, setIsActive];\n};\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ label, onClick, className, Icon, imgSrc, imgAlt }) => {\n  return (\n    <button className={`btn ${className}`} onClick={onClick}>\n      <>\n        {Icon && (\n          <span className=\"btn-icon\" aria-label={imgAlt || \"button icon\"}>\n            <Icon />\n          </span>\n        )}\n        {imgSrc && (\n          <img\n            className=\"btn-img\"\n            src={imgSrc}\n            alt={imgAlt || \"button image\"}\n          />\n        )}\n        {label && <span>{label}</span>}\n      </>\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useRef } from \"react\";\nimport \"./Dropdown.css\";\nimport { OutsideClick } from \"../OutsideClick\";\nimport Button from \"../Button/Button\";\n\nconst Dropdown = ({\n  className,\n  Icon,\n  options,\n  label,\n  onSelect,\n  onDelete,\n  onMouseEnter,\n  onMouseLeave,\n}) => {\n  const dropdownRef = useRef(null); //드롭다운 요소 참조를 위한 ref 생성\n  const [isOpen, setIsOpen] = OutsideClick(dropdownRef, false); //OutsideClick 사용\n  const [selectedValue, setSelectedValue] = useState(null); //선택된 값 상태 관리\n\n  const handleSelect = (value) => {\n    // className이 \"alarm\"일 때 label을 변경하지 않음\n    if (className !== \"alarm\") {\n      setSelectedValue(\n        value.content === \"폴더 전체\" ? { label: \"폴더 전체\" } : value\n      );\n    }\n    setIsOpen(false); // 드롭다운 닫기\n    onSelect(value);\n  };\n  const toggleDropdown = () => {\n    //드롭다운 토글 함수\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div\n      className={`dropdown ${className}`}\n      ref={dropdownRef}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      <div\n        className={`dropdown-header ${isOpen ? \"open\" : \"\"}`}\n        onClick={toggleDropdown}\n      >\n        {Icon && (\n          <span className=\"dropdown-header-img\" aria-label=\"Dropdown Img\">\n            <Icon />\n          </span>\n        )}\n        {selectedValue ? (\n          selectedValue.label\n        ) : (\n          <span className=\"dropdown-placeholder\">{label}</span>\n        )}\n        {className === \"alarm\" && options?.length > 0 && (\n          <span className=\"dropdown-badge\"></span>\n        )}\n      </div>\n\n      {(isOpen || className === \"search-dropdown\") && (\n        <div className=\"dropdown-menu\">\n          {[\n            ...(className === \"dropdown-folder-select\" // className 조건 추가\n              ? [{ content: label, img: null }]\n              : []),\n            ...options,\n          ].map((option, index) => (\n            <div\n              key={index}\n              className=\"dropdown-option\"\n              onClick={() => handleSelect(option)}\n            >\n              {option.img && (\n                <img src={option.img} alt=\"\" className=\"dropdown-option-img\" />\n              )}\n              <span onClick={() => handleSelect(option.content)}>\n                {option.content}\n              </span>\n              <Button className=\"dropdown-select\" label=\"선택\" />\n\n              {onDelete && (\n                <Button\n                  className=\"dropdown-delete\"\n                  label=\"✕\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDelete(option.content);\n                  }}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","// src/components/TextField.js\nimport React, { useRef, forwardRef } from \"react\";\nimport \"./Textfield.css\"; // 스타일 파일 (선택)\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport { OutsideClick } from \"../OutsideClick\";\n\nconst TextField = forwardRef(({\n  label,\n  value,\n  onChange,\n  placeholder,\n  type = \"text\",\n  required = false,\n  Icon,\n  recentSearches = [],\n  onSearchSelect,\n  onSearchDelete,\n}, ref) => {\n  const dropdownRef = useRef(null);\n  const [isDropdownOpen, setIsDropdownOpen] = OutsideClick(dropdownRef, false);\n\n  const handleFocus = () => {\n    setIsDropdownOpen(true);\n  };\n\n  const handleClick = () => {\n    setIsDropdownOpen(true); // 입력 필드 클릭 시 항상 드롭다운 열기\n  };\n  \n  const handleSelectSearch = (selected) => {\n    onSearchSelect(selected.content); // 부모 컴포넌트로 선택된 값을 전달\n    setIsDropdownOpen(false); // 선택 시 드롭다운 닫기\n  };\n\n  return (\n    <div className=\"text-field\" ref={dropdownRef}>\n      {label && <label className=\"text-field-label\">{label}</label>}\n      <div className=\"text-filed-wrapper\">\n        {Icon && (\n          <span className=\"text-field-img\" aria-label=\"Field Icon\">\n            {\" \"}\n            <Icon />{\" \"}\n          </span>\n        )}\n        <input\n          className=\"text-field-input\"\n          type={type}\n          value={value}\n          onChange={onChange}\n          onFocus={handleFocus}\n          onClick={handleClick} // 클릭 이벤트 추가\n          placeholder={placeholder}\n          required={required}\n          ref={ref}\n        />\n      </div>\n      {isDropdownOpen && recentSearches.length > 0 && (\n        <Dropdown\n          className=\"search-dropdown\"\n          options={recentSearches}\n          label=\"최근검색\"\n          onSelect={handleSelectSearch}\n          onDelete={onSearchDelete}\n        />\n      )}\n    </div>\n  );\n});\n\nexport default TextField;\n","// src/components/Modal.js\nimport React, { useRef } from \"react\";\nimport \"./Modal.css\";\nimport { OutsideClick } from \"../OutsideClick\";\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  const modalRef = useRef(null);\n  const [isActive, setIsActive] = OutsideClick(modalRef, isOpen);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\" ref={modalRef}>\n      <div className=\"modal\">\n        <button className=\"modal-close\" onClick={onClose}>\n          X\n        </button>\n        <div className=\"modal-content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst MenuIcon = () => {\n  return (\n    <svg\n      width=\"1.5rem\"\n      height=\"1.5rem\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.81763 17.2222C2.81763 17.8359 3.31509 18.3333 3.92874 18.3333H21.5408C22.1544 18.3333 22.6519 17.8359 22.6519 17.2222V17.2222C22.6519 16.6086 22.1544 16.1111 21.5408 16.1111H3.92874C3.31509 16.1111 2.81763 16.6086 2.81763 17.2222V17.2222ZM2.81763 11.6667C2.81763 12.2803 3.31509 12.7778 3.92874 12.7778H21.5408C22.1544 12.7778 22.6519 12.2803 22.6519 11.6667V11.6667C22.6519 11.053 22.1544 10.5556 21.5408 10.5556H3.92874C3.31509 10.5556 2.81763 11.053 2.81763 11.6667V11.6667ZM3.92874 5C3.31509 5 2.81763 5.49746 2.81763 6.11111V6.11111C2.81763 6.72476 3.31509 7.22222 3.92874 7.22222H21.5408C22.1544 7.22222 22.6519 6.72476 22.6519 6.11111V6.11111C22.6519 5.49746 22.1544 5 21.5408 5H3.92874Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default MenuIcon;\n","import React from 'react';\n\nconst DownIcon = () => {\n  return (\n    <svg\n      width=\"1.5rem\"\n      height=\"1.5rem\"\n      viewBox=\"0 0 30 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M5.72599 7.94731C6.24373 7.42524 7.08762 7.42478 7.60594 7.94628L12.7347 13.1067L17.8635 7.94628C18.3818 7.42478 19.2257 7.42524 19.7435 7.94731V7.94731C20.2556 8.46367 20.2556 9.29633 19.7435 9.81269L13.1189 16.4926C12.9073 16.706 12.5622 16.706 12.3505 16.4926L5.72599 9.81269C5.2139 9.29633 5.2139 8.46367 5.72599 7.94731V7.94731Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default DownIcon;\n","import React from 'react';\n\nconst SearchIcon = () => {\n  return (\n    <svg\n      width=\"1.5rem\"\n      height=\"1.5rem\"\n      viewBox=\"0 0 25 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.9933 14.5786L16.2303 13.8157C16.8748 13.1647 17.5603 11.2739 17.5603 9.43282C17.5603 5.32762 14.2603 2 10.1891 2C6.11791 2 2.81787 5.32762 2.81787 9.43282C2.81787 13.538 6.11791 16.8656 10.1891 16.8656C12.0149 16.8656 13.4378 16.3487 14.4961 15.5644L15.2922 16.2939L20.2524 21.2855C20.6437 21.6792 21.2808 21.6789 21.6717 21.2847L21.9545 20.9996C22.3408 20.6101 22.3412 19.982 21.9552 19.592L16.9933 14.5786ZM10.1891 14.5786C7.36535 14.5786 5.08594 12.2802 5.08594 9.43282C5.08594 6.58548 7.36535 4.28702 10.1891 4.28702C13.0128 4.28702 15.2922 6.58548 15.2922 9.43282C15.2922 12.2802 13.0128 14.5786 10.1891 14.5786Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default SearchIcon;\n","import React from 'react';\n\nconst AlarmLineIcon = () => {\n  return (\n    <svg\n      width=\"1.5rem\"\n      height=\"1.5rem\"\n      viewBox=\"4 4 25 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.3747 22C13.1498 22 13.8272 21.557 14.1703 20.9098C14.429 20.4218 13.9612 19.9487 13.409 19.9487H11.3404C10.7881 19.9487 10.3203 20.4218 10.579 20.9098C10.9221 21.557 11.5996 22 12.3747 22ZM18.4775 15.8462V10.7179C18.4775 7.56923 16.8196 4.93333 13.9004 4.2359V3.53846C13.9004 2.68718 13.2189 2 12.3747 2C11.5305 2 10.849 2.68718 10.849 3.53846V4.2359C7.93994 4.93333 6.27183 7.55897 6.27183 10.7179V15.8462L4.4482 17.685C4.31326 17.8211 4.23755 18.005 4.23755 18.1966V18.1966C4.23755 18.5978 4.56281 18.9231 4.96404 18.9231H19.7853C20.1866 18.9231 20.5118 18.5978 20.5118 18.1966V18.1966C20.5118 18.005 20.4361 17.8211 20.3012 17.685L18.4775 15.8462ZM16.4432 16.8718H8.30611V10.7179C8.30611 8.17436 9.842 6.10256 12.3747 6.10256C14.9074 6.10256 16.4432 8.17436 16.4432 10.7179V16.8718Z\"\n        fill=\"black\"\n      />\n    </svg>\n  );\n};\n\nexport default AlarmLineIcon;\n","import React from 'react';\n\nconst AlarmFilledIcon = () => {\n  return (\n    <svg\n      width=\"1.5rem\"\n      height=\"1.5rem\"\n      viewBox=\"4 4 26 26\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.5293 22C13.3044 22 13.9819 21.557 14.325 20.9098C14.5837 20.4218 14.1159 19.9487 13.5636 19.9487H11.4951C10.9428 19.9487 10.475 20.4218 10.7337 20.9098C11.0768 21.557 11.7543 22 12.5293 22ZM18.6322 15.8462V10.7179C18.6322 7.56923 16.9743 4.93333 14.0551 4.2359V3.53846C14.0551 2.68718 13.3736 2 12.5293 2C11.6851 2 11.0036 2.68718 11.0036 3.53846V4.2359C8.09461 4.93333 6.42649 7.55897 6.42649 10.7179V15.8462L4.60286 17.685C4.46792 17.8211 4.39221 18.005 4.39221 18.1966V18.1966C4.39221 18.5978 4.71747 18.9231 5.1187 18.9231H19.94C20.3412 18.9231 20.6665 18.5978 20.6665 18.1966V18.1966C20.6665 18.005 20.5908 17.8211 20.4558 17.685L18.6322 15.8462Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport default AlarmFilledIcon;\n","import React, { useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport TextField from \"../Textfield/Textfield\";\nimport Button from \"../Button/Button\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Modal from \"../Modal/Modal\"; // Modal 컴포넌트 import\n\nimport \"./HeaderStyle.css\";\nimport MenuIcon from \"../../assets/icon/MenuIcon\";\nimport DownIcon from \"../../assets/icon/DownIcon\";\nimport SearchIcon from \"../../assets/icon/SearchIcon\";\nimport AlarmLineIcon from \"../../assets/icon/AlarmLineIcon\";\nimport AlarmFilledIcon from \"../../assets/icon/AlarmFilledIcon\";\n\nconst Header = ({ type, toggleMenu }) => {\n  const location = useLocation();\n  const [alarmOption, setAlarmOption] = useState(\"\");\n  const [folderOption, setFolderOption] = useState(\"폴더선택\");\n  const [tagOption, setTagOption] = useState(\"태그선택\");\n  const [searchValue, setSearchValue] = useState(\"\"); //검색창 최근검색어 임시 값\n  const [isHovered, setIsHovered] = useState(false);\n\n  // ================ 임시 데이터 =====================\n  const [recentSearches, setRecentSearches] = useState([\n    { img: \"example.png\", content: \"React\" },\n    { img: \"example.png\", content: \"JavaScript\" },\n    { img: \"example.png\", content: \"Frontend\" },\n    { img: \"example.png\", content: \"CSS\" },\n    { img: \"example.png\", content: \"개발자 꿀팁\" },\n    { img: \"example.png\", content: \"html은 무엇인가\" },\n  ]);\n\n  const folderOpt = [\"폴더1\", \"폴더2\", \"폴더3\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const tagsOpt = [\"Documents\", \"Pictures\", \"Music\", \"태그어쩌구1\"].map(\n    (item) => ({\n      label: item,\n      content: item,\n    })\n  );\n  const alarmOptions = [\n    {\n      img: \"example.png\",\n      label: \"리마인드\",\n      content: \"3일 후 휴지통에서 n개의 링크들이 영원히 빛을 잃게 됩니다.\",\n    },\n    {\n      img: \"example.png\",\n      label: \"어쩌구\",\n      content: \"또 어떤 알람이 있을까요\",\n    },\n    {\n      img: \"example.png\",\n      label: \"리마인드\",\n      content: \"새로운 업데이트가 있습니다.\",\n    },\n    {\n      img: \"example.png\",\n      label: \"리마인드\",\n      content: \"새로운 업데이트가 있습니다.\",\n    },\n    {\n      img: \"example.png\",\n      label: \"리마인드\",\n      content: \"새로운 업데이트가 있습니다.\",\n    },\n    {\n      img: \"example.png\",\n      label: \"리마인드\",\n      content: \"새로운 업데이트가 있습니다.\",\n    },\n  ].map((item) => ({\n    ...item,\n  }));\n  const profileImg = \"example.png\";\n\n  // ================ 임시 데이터 =====================\n\n  const handleAlarmSelect = (option) => {\n    setAlarmOption(option.content);\n  };\n  const handleFolderSelect = (option) => {\n    setFolderOption(option.content);\n  };\n  const handleTagSelect = (option) => {\n    setTagOption(option.content);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n  // 검색어 삭제 처리 함수\n  const handleSearchDelete = (searchToDelete) => {\n    const updatedSearches = recentSearches.filter(\n      (search) => search.content !== searchToDelete\n    );\n    setRecentSearches(updatedSearches); // 상태 업데이트\n  };\n\n  const headerStyle =\n    type === \"ONBOARDING\"\n      ? { backgroundColor: \"#F1F1F1\", paddingTop: \"1rem\" }\n      : {};\n  const [isModalOpen, setIsModalOpen] = useState(false); // 모달 상태 추가\n\n  // 모달 open/close 함수\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  //마우스 호버 이벤트 함수\n  const handleMouseEnter = () => setIsHovered(true);\n  const handleMouseLeave = () => setIsHovered(false);\n\n  return (\n    <header className=\"header\" style={headerStyle}>\n      {/* ========== LINK CARD PAGES ========== */}\n      {location.pathname !== \"/\" && (\n        <>\n          <Button\n            className=\"menu-img\"\n            onClick={toggleMenu}\n            Icon={MenuIcon}\n            imgAlt=\"menu\"\n          />\n          <div className=\"searchers\">\n            <Dropdown\n              className=\"dropdown-folder-select\"\n              options={folderOpt}\n              label=\"폴더 전체\"\n              Icon={DownIcon}\n              onSelect={handleFolderSelect}\n            />\n            <Dropdown\n              className=\"dropdown-tag-select\"\n              options={tagsOpt}\n              label=\"태그선택\"\n              Icon={DownIcon}\n              onSelect={handleTagSelect}\n            />\n            <TextField\n              className=\"text_field\"\n              placeholder=\"검색어를 입력하세요.\"\n              Icon={SearchIcon}\n              value={searchValue}\n              onChange={handleSearchChange}\n              recentSearches={recentSearches} // 최근 검색어 전달\n              onSearchSelect={\n                (selected) => setSearchValue(selected) // 선택된 검색어를 검색창에 반영\n              }\n              onSearchDelete={handleSearchDelete}\n            />\n            <Button className=\"search\" label=\"검색\" />\n            <Button label=\"초기화\" />\n          </div>\n          <div className=\"user_info\">\n            <Dropdown\n              className=\"alarm\"\n              options={alarmOptions}\n              Icon={isHovered ? AlarmFilledIcon : AlarmLineIcon}\n              onSelect={handleAlarmSelect}\n              onMouseEnter={handleMouseEnter} // 마우스 오버 시 상태 변경\n              onMouseLeave={handleMouseLeave} // 마우스 아웃 시 상태 변경\n            />\n            <Button\n              className=\"user-info\"\n              imgSrc=\"example.png\"\n              imgAlt=\"user-info\"\n              onClick={openModal}\n            />\n            <Modal isOpen={isModalOpen} onClose={closeModal} />\n          </div>\n        </>\n      )}\n\n      {/* ========== Landing PAGE ========== */}\n      {location.pathname === \"/\" && (\n        <>\n          <img\n            className=\"logo\"\n            src=\"example.png\"\n            alt=\"logo\"\n            onClick={() => window.location.reload()}\n          />\n          <div className=\"buttons\">\n            <Button label=\"확장 프로그램 추가하기\" />\n            <Link to=\"/homepage\">\n              <Button label=\"[임시]홈P\" />\n            </Link>\n            <Link to=\"/signpage\">\n              <Button label=\"[임시]SignP\" />\n            </Link>\n          </div>\n        </>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./footer-layout.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <h2>서비스 메인 슬로건 코멘트</h2>\n      <button className=\"button\">시작하기</button>\n      <div className=\"footer-contents\">\n        <div className=\"left-contents\">\n          <p>copyrights @sofa</p>\n          <p>기타 내용1</p>\n          <p>기타 내용2</p>\n        </div>\n        <div className=\"right-contents\">\n          <Link to=\"/termspage\">\n            <p>이용약관</p>\n          </Link>\n          <Link to=\"/privacypolicy\">\n            <p>개인정보처리방침</p>\n          </Link>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./Accordion.css\";\n// import openIcon from \"example.png\";\n// import closeIcon from \"example.png\";\n\nconst Accordion = ({ title, content, type }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleAccordion = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className={`accordion ${type}`}>\n      <div className=\"accordion-header\" onClick={toggleAccordion}>\n        <p>{title}</p>\n        <img\n          src={isOpen ? \"example.png\" : \"example.png\"}\n          alt={isOpen ? \"Open\" : \"Close\"}\n          className=\"accordion-icon\"\n        />\n      </div>\n      {isOpen && <div className=\"accordion-content\">{content}</div>}\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React from \"react\";\nimport Header from \"../components/Layout/Header.js\";\nimport Footer from \"../components/Layout/Footer.js\";\nimport Accordion from \"../components/Accordion/Accordion.js\";\n\nimport \"./LandingPage.css\";\n\nconst LandingPage = () => {\n  const answer1 =\n    \"A. Chrome Extension에서 확장 프로그램을 다운받아 사용합니다.\";\n  const answer2 =\n    \"A. 오늘 저녁은 아직 알 수가 없는데요, 집에 참치와 무 무침이 있어서 그걸 먹을 수도 있고 그냥 라면을 먹을 수도 있지만 불닭은 안먹을 겁니다. 어제 먹었기 때문입니다.?\";\n  const answer3 = \"blah blah\";\n\n  return (\n    <div className=\"landing-page\">\n      <Header type=\"ONBOARDING\" />\n      <main className=\"main-style\">\n        <section className=\"SLOGAN_SEC main-style\">\n          <h1 className=\"slogan\">당신의 시간을 절약하는 최고의 서비스</h1>\n          <p>확장 프로그램을 추가하고 더 많은 기능을 경험하세요</p>\n          <a\n            className=\"button\"\n            href=\"https://chrome.google.com/webstore\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Chrome Web Store 바로가기\n          </a>\n        </section>\n        <section className=\"MAIN_FEAT_SEC  main-style\">\n          <img className=\"service-icon\" src=\"example.png\" alt=\"icon\" />\n          <h2 className=\"title\">주요 서비스 기능, 장점 소개</h2>\n          <div className=\"content-img  main-style\">\n            <img src=\"example.png\" width={\"200px\"} alt=\"main content1\" />\n            <img src=\"example.png\" width={\"200px\"} alt=\"main content2\" />\n            <img src=\"example.png\" width={\"200px\"} alt=\"main content3\" />\n          </div>\n        </section>\n\n        <section className=\"OTHER_FEAT_SEC  main-style\">\n          <img className=\"service-icon\" src=\"example.png\" alt=\"icon\" />\n          <h2 className=\"title\">기타 추가 서비스 소개</h2>\n          <div className=\"grid\">\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>당신만의 북마크 폴더를 공유하고 팀원들과 협업하세요</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>폴더와 태그별로 북마크를 관리하세요</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>\n                이것은 다섯줄짜리 텍스트를 보기 위함입니다. 이것은 다섯줄짜리\n                텍스트를 보기 위함입니다. 이것은 다섯줄짜리\n              </p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>\n                이것은 네줄짜리 텍스트를 보기 위함입니다. 이것은 네줄짜리\n                텍스트를 보기 위함입니다.\n              </p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>description for feature5</p>\n            </div>\n            <div className=\"card\">\n              <img src=\"example.png\" alt=\"icon\" />\n              <p>description for feature6</p>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"FAQ_SEC  main-style\">\n          <img className=\"service-icon\" src=\"example.png\" alt=\"icon\" />\n          <h2 className=\"title\">자주 묻는 질문 / FAQ</h2>\n          <Accordion\n            title=\"Q1. 어떻게 사용하나요?\"\n            content={answer1}\n            type=\"FAQ\"\n          />\n          <Accordion\n            title=\"Q2. 오늘 저녁은 뭔가요?\"\n            content={answer2}\n            type=\"FAQ\"\n          />\n          <Accordion\n            title=\"Q3. 자주 묻는 질문이 뭔가요?\"\n            content={answer3}\n            type=\"FAQ\"\n          />\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default LandingPage;\n","import axios from \"axios\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL; // 환경 변수에서 URL 가져오기\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL, // baseURL 설정\n  timeout: 10000, // 요청 타임아웃 (선택 사항)\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default apiClient;\n","import axios from \"axios\";\nimport apiClient from \"./apiClient\"; // apiClient를 올바르게 가져옴\n\nexport const getGoogleLoginUrl = async () => {\n  try {\n    console.log(\"Base URL:\", apiClient.defaults.baseURL);\n    const response = await apiClient.get(\"/login/oauth2/google\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch Google login URL:\", error);\n    throw error;\n  }\n};\n\nexport const acessToken = async () => {\n  try {\n    console.log(\"Base URL:\", apiClient.defaults.baseURL);\n    const response = await apiClient.get(\"/login/oauth2/code/google\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch Google login URL:\", error);\n    throw error;\n  }\n};\n","import React, { useState } from \"react\";\nimport \"../components/Layout/HeaderStyle.css\";\nimport \"./onBoarding-layout.css\";\nimport Button from \"../components/Button/Button\";\nimport { getGoogleLoginUrl } from \"../services/loginService\"; // Google 로그인 서비스 호출\n\nconst ImagePlaceholder = ({ width, height }) => {\n  const placeholderStyle = {\n    width: `${width}px`,\n    height: `${height}px`,\n  };\n\n  return (\n    <div className=\"image-placeholder\" style={placeholderStyle}>\n      이미지 자리 표시지\n    </div>\n  );\n};\n\nconst SignPage = () => {\n  const handleGoogleLogin = async () => {\n    try {\n      // 백엔드에서 Google 로그인 URL 가져오기\n      const googleLoginUrl = await getGoogleLoginUrl();\n\n      console.log(\"Google 로그인 URL:\", googleLoginUrl);\n      // Google 로그인 페이지로 리디렉션\n      // window.location.href = googleLoginUrl;\n    } catch (error) {\n      console.error(\"Google 로그인 URL 가져오기 실패:\", error);\n      alert(\"Google 로그인에 실패했습니다. 다시 시도해주세요.\");\n    }\n  };\n\n  return (\n    <div className=\"signpage\">\n      <header className=\"header\">\n        <img\n          className=\"logo\"\n          src=\"example.png\"\n          alt=\"logo\"\n          onClick={() => window.location.reload()}\n        />\n      </header>\n      <main className=\"sign-main-style\">\n        <div className=\"image-section\">\n          <ImagePlaceholder width={362} height={320} /> {/* 여기서 크기 설정 */}\n        </div>\n        <div className=\"text-section\">\n          <h1 className=\"sign-slogan\">서비스 메인 슬로건 코멘트</h1>\n          <p>서비스 서브 슬로건 및 기타 설명</p>\n          <div className=\"sign-text-button-wrapper\">\n            <Button\n              label=\"Google 계정으로 로그인\"\n              onClick={handleGoogleLogin} // Google 로그인 핸들러 연결\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default SignPage;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./SideMenu.css\";\nimport Accordion from \"../Accordion/Accordion\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nconst SideMenu = ({ isOpen }) => {\n  const location = useLocation();\n  const currentPath = location.pathname;\n  const isActive = (path) => currentPath === path;\n\n  const folderEdit = [\n    { img: \"example.png\", content: \"폴더 이름 수정\" },\n    { img: \"example.png\", content: \"폴더 삭제\" },\n  ].map((item) => ({\n    ...item,\n  }));\n\n  return (\n    <div>\n      <div className={`side-menu ${isOpen ? \"open\" : \"\"}`}>\n        <Link\n          to=\"/homepage\"\n          className={`home ${isActive(\"/homepage\") ? \"active\" : \"\"}`}\n        >\n          <img className=\"icon\" src=\"example.png\" alt=\"icon\" />\n          <p>홈</p>\n        </Link>\n        <div className=\"folder\">\n          <Accordion\n            type=\"SIDE_MENU\"\n            title=\"폴더\"\n            content={\n              <>\n                <Link\n                  to=\"/folderpage\"\n                  className={`folder-item ${\n                    isActive(\"/folderpage\") ? \"active\" : \"\"\n                  }`}\n                >\n                  폴더 1\n                </Link>\n                <Link\n                  to=\"/folder2\"\n                  className={`folder-item ${\n                    isActive(\"/folderpage\") ? \"active\" : \"\"\n                  }`}\n                >\n                  폴더 2\n                </Link>\n                <Link\n                  to=\"/folder3\"\n                  className={`folder-item ${\n                    isActive(\"/folderpage\") ? \"active\" : \"\"\n                  }`}\n                >\n                  폴더 3\n                </Link>\n              </>\n            }\n          />\n        </div>\n        <Link\n          to=\"/remindpage\"\n          className={`reminditems ${isActive(\"/remindpage\") ? \"active\" : \"\"}`}\n        >\n          <img className=\"icon\" src=\"example.png\" alt=\"icon\" />\n          <p>리마인드함</p>\n        </Link>\n        <Link\n          to=\"/removeditemspage\"\n          className={`removeditems ${\n            isActive(\"/removeditemspage\") ? \"active\" : \"\"\n          }`}\n        >\n          <img className=\"icon\" src=\"example.png\" alt=\"icon\" />\n          <p>휴지통</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default SideMenu;\n","import React, { useState } from \"react\";\nimport \"./LinkCard.css\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport Button from \"../Button/Button\";\n\nconst LinkCard = ({ bookmark, onDelete, onEdit, onClick }) => {\n  const [hover, setHover] = useState(false);\n  const [folderOption, setFolderOption] = useState(\"\");\n  const folderOpt = [\"Documents\", \"Pictures\", \"Music\", \"Videos\"].map(\n    (item) => ({\n      label: item,\n      content: item,\n    })\n  );\n  const handleFolderOption = (option) => {\n    setFolderOption(option.content);\n  };\n\n  return (\n    <div\n      className=\"linkCard\"\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={onClick}\n    >\n      <div className=\"link-card-top\">\n        <img className=\"image\" src={bookmark.img} alt={bookmark.title} />\n        {hover && (\n          <div className=\"hover-menus\">\n            <Dropdown\n              className=\"linkcard folder-name\"\n              options={folderOpt}\n              label=\"폴더\"\n              onSelect={handleFolderOption}\n            />\n            <Button className=\"linkcard alarm\" label=\"@\" />\n            <Button\n              className=\"linkcard delete\"\n              label=\"D\"\n              onClick={() => onDelete(bookmark.id)}\n            />\n            <Button\n              className=\"linkcard link\"\n              label=\"바로가기\"\n              onClick={() =>\n                window.open(bookmark.url, \"_blank\", \"noopener noreferrer\")\n              }\n            />\n          </div>\n        )}\n      </div>\n      <p className=\"details\">{bookmark.title}</p>\n    </div>\n  );\n};\n\nexport default LinkCard;\n","// BookmarkList.js\n\nimport React, { useState, useEffect } from \"react\";\nimport LinkCard from \"./LinkCard.js\";\nimport \"./ShowLinkCard.css\";\n\n//bookmarks : 북마크 데이터 배열(id, title, url 포함)\n//onDelete : 북마크 삭제 함수\n//북마크 목록 길이가 0보다 길면 렌더링\nconst ShowLinkCard = ({\n  bookmarks,\n  sideMenuOpen,\n  bookmarkDetailOpen,\n  onDelete,\n  onEdit,\n  onLinkCardClick,\n  sortingOption,\n  sortingDirOption,\n}) => {\n  const [gridColumns, setGridColumns] = useState(6); // 기본적으로 6개 열\n  // 화면 크기와 메뉴 상태에 따라 그리드 열 개수를 동적으로 설정하는 함수\n  const calculateGridColumns = () => {\n    const windowWidth = window.innerWidth;\n    let columns = 6; // 기본 열 개수\n\n    // 메뉴가 열렸을 경우 화면 길이를 빼고 계산\n    if (sideMenuOpen && bookmarkDetailOpen) {\n      columns = Math.floor(\n        (windowWidth -\n          20 *\n            parseFloat(getComputedStyle(document.documentElement).fontSize)) /\n          200\n      ); // sideMenu와 bookmarkDetail이 열렸을 때\n    } else if (sideMenuOpen || bookmarkDetailOpen) {\n      columns = Math.floor(\n        (windowWidth -\n          10 *\n            parseFloat(getComputedStyle(document.documentElement).fontSize)) /\n          200\n      ); // 하나만 열렸을 때\n    } else {\n      columns = Math.floor(windowWidth / 200); // 기본적으로 윈도우 창 크기에 맞춰\n    }\n\n    setGridColumns(columns);\n  };\n\n  // 화면 크기 변경 시 그리드 열 개수 재계산\n  useEffect(() => {\n    window.addEventListener(\"resize\", calculateGridColumns);\n    calculateGridColumns(); // 최초 렌더링 시 한 번 호출\n\n    // 이벤트 리스너 정리\n    return () => {\n      window.removeEventListener(\"resize\", calculateGridColumns);\n    };\n  }, [sideMenuOpen, bookmarkDetailOpen]); // 메뉴 상태가 변경될 때마다 호출\n\n  //Sorting\n  const sortBookmarks = (bookmarks, sortingOption, sortingDir) => {\n    let sorted = [...bookmarks];\n\n    if (sortingOption === \"최근저장\") {\n      sorted = sorted.sort((a, b) => b.id - a.id);\n    } else if (sortingOption === \"오래된저장\") {\n      sorted = sorted.sort((a, b) => a.id - b.id);\n    } else if (sortingOption === \"이름순\") {\n      sorted = sorted.sort((a, b) => a.title.localeCompare(b.title));\n    }\n    if (sortingDir === \"내림차순\") {\n      sorted = sorted.reverse();\n    }\n    return sorted;\n  };\n  const sortedBookmarks = sortBookmarks(\n    bookmarks,\n    sortingOption,\n    sortingDirOption\n  );\n\n  return (\n    <div\n      className=\"bookmark-grid\"\n      style={{ gridTemplateColumns: `repeat(${gridColumns}, 1fr)` }}\n    >\n      {sortedBookmarks.length > 0 ? (\n        sortedBookmarks.map((bookmark) => (\n          <LinkCard\n            key={bookmark.id} //리스트에서 고유 식별자 사용\n            bookmark={bookmark} //각 북마크 데이터를 BookmarkItem에 전달\n            onDelete={onDelete} //삭제 기능을 BookmarkItem에 전달\n            onEdit={onEdit}\n            onClick={() => {\n              console.log(\"Card clicked:\", bookmark);\n              onLinkCardClick(bookmark); // 안전하게 호출\n            }}\n          />\n        ))\n      ) : (\n        <p>...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ShowLinkCard;\n","// src/components/Bookmark/BookmarkDetail.js\nimport React from \"react\";\nimport \"./BookmarkDetail.css\";\nimport Button from \"../Button/Button\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nconst BookmarkDetail = ({ isOpen, bookmark, onEdit, onDelete, onClose }) => {\n  if (!bookmark) return <p>북마크를 선택하세요.</p>;\n\n  // 예시 데이터 추가\n  const exampleTags = [\"React\", \"JavaScript\", \"Frontend\", \"CSS\"];\n  const folderOpt = [\"폴더1\", \"폴더2\", \"폴더3\"];\n\n  return (\n    <div className={`bookmark-detail ${isOpen ? \"open\" : \"\"}`}>\n      {/* 상단 이미지 및 제목 */}\n      <div className=\"bookmark-detail-header\">\n        <img src=\"example.png\" alt={bookmark.title} className=\"detail-image\" />\n        <div className=\"detail-info\">\n          <div className=\"row\">\n            <Button label=\"링크 바로가기\" />\n            <Dropdown className=\"folder\" options={folderOpt} label=\"폴더선택\" />\n          </div>\n          <div className=\"detail-title-container\">\n            <h2 className=\"detail-title\">{bookmark.title}</h2>\n            <Button className=\"detail-edit\" label=\"수정\" />\n          </div>\n        </div>\n      </div>\n\n      {/* 자동 요약 */}\n      <h4>자동 요약</h4>\n      <div className=\"detail-summary\">\n        <h3>자동 요약</h3>\n        <p className=\"summary-text\">\n          AI가 생성한 요약 텍스트가 여기에 표시됩니다. 요약 내용을 넣을 수\n          있습니다.\n        </p>\n        <Button className=\"detail-edit\" label=\"수정\" />\n      </div>\n\n      {/* 추가 설명 */}\n      <h4>추가 설명</h4>\n      <div className=\"detail-description\">\n        <h3>추가 설명</h3>\n        <p className=\"description-text\">\n          추가 설명이 여기에 들어갑니다. 필요에 따라 더 많은 설명을 표시할 수\n          있습니다.\n        </p>\n        <Button className=\"detail-edit\" label=\"수정\" />\n      </div>\n\n      {/* 태그 섹션 */}\n      <div className=\"detail-tags\">\n        <h3>태그</h3>\n        <div className=\"tags-container\">\n          {exampleTags.map((tag, index) => (\n            <span key={index} className=\"tag-item\">\n              {tag}\n            </span>\n          ))}\n          <button className=\"add-tag-btn\">+</button>\n        </div>\n      </div>\n\n      {/* 닫기 버튼 */}\n      <button className=\"close-button\" onClick={onClose}>\n        닫기\n      </button>\n    </div>\n  );\n};\n\nexport default BookmarkDetail;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\";\n\nimport \"../components/Layout/main-layout.css\";\n\nconst RemovedItemsPage = ({ bookmarks, onAddBookmark, onDeleteBookmark }) => {\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedBookmark, setSelectedBookmark] = useState(false);\n  const [sortingOption, setSortingOption] = useState(\"최근저장\");\n  const [sortingDirOption, setSortingDirOption] = useState(\"오름차순\");\n\n  const sortingOpt = [\"최근저장\", \"오래된저장\", \"이름순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n\n  // SORTING\n  const handleSortingSelect = (option) => {\n    setSortingOption(option.content);\n  };\n  const handleSortingDirSelect = (option) => {\n    setSortingDirOption(option.content);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  return (\n    <div\n      className={`main-page ${isMenuOpen ? \"menu-open\" : \"\"} ${\n        selectedBookmark ? \"show-detail\" : \"\"\n      }`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section className=\"main-box\">\n        <h3>휴지통</h3>\n        <div className=\"selected-tags\"></div>\n\n        <div className=\"sorting-options\">\n          <Dropdown\n            className=\"sorting\"\n            label=\"최근저장\"\n            options={sortingOpt}\n            onSelect={handleSortingSelect}\n          />\n          <Dropdown\n            className=\"sorting\"\n            label=\"오름차순\"\n            options={sortingDirOpt}\n            onSelect={handleSortingDirSelect}\n          />\n        </div>\n\n        <ShowLinkCard\n          bookmarks={bookmarks}\n          onDelete={handleDelete}\n          onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n          sideMenuOpen={isMenuOpen}\n          bookmarkDetailOpen={selectedBookmark}\n          sortingOption={sortingOption}\n          sortingDirOption={sortingDirOption}\n        />\n      </section>\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RemovedItemsPage;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Dropdown from \"../components/Dropdown/Dropdown\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\";\n\nimport \"../components/Layout/main-layout.css\";\n\nconst FolderPage = ({ bookmarks, onDeleteBookmark }) => {\n  const [folderName, setFolderName] = useState(\"\"); //폴더명\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [sortingOption, setSortingOption] = useState(\"최근저장\"); //정렬 기준\n  const [sortingDirOption, setSortingDirOption] = useState(\"오름차순\"); //정렬 방향\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [selectedBookmark, setSelectedBookmark] = useState(null);\n\n  const sortingOpt = [\"최근저장\", \"오래된저장\", \"이름순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n  const sortingDirOpt = [\"오름차순\", \"내림차순\"].map((item) => ({\n    label: item,\n    content: item,\n  }));\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // 폴더명 API 받아오기\n        const folderNameData = { label: \"폴더명\" };\n        setFolderName(folderNameData.label);\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n  const handleEdit = (id) => {\n    //추후 수정 기능 코드 추가\n  };\n\n  // SORTING\n  const handleSortingSelect = (option) => {\n    setSortingOption(option.content);\n  };\n  const handleSortingDirSelect = (option) => {\n    setSortingDirOption(option.content);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  return (\n    <div\n      className={`main-page ${isMenuOpen ? \"menu-open\" : \"\"} ${\n        selectedBookmark ? \"show-detail\" : \"\"\n      }`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section className=\"main-box\">\n        <h3>{folderName}</h3>\n\n        <div className=\"sorting-options\">\n          <Dropdown\n            className=\"sorting\"\n            label=\"최근저장\"\n            options={sortingOpt}\n            onSelect={handleSortingSelect}\n          />\n          <Dropdown\n            className=\"sorting\"\n            label=\"오름차순\"\n            options={sortingDirOpt}\n            onSelect={handleSortingDirSelect}\n          />\n        </div>\n\n        <ShowLinkCard\n          bookmarks={bookmarks}\n          onDelete={handleDelete}\n          onEdit={handleEdit}\n          onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n          sideMenuOpen={isMenuOpen}\n          bookmarkDetailOpen={selectedBookmark}\n          sortingOption={sortingOption}\n          sortingDirOption={sortingDirOption}\n        />\n      </section>\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FolderPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../components/Layout/Header\";\nimport SideMenu from \"../components/SideMenu/SideMenu\";\nimport ShowLinkCard from \"../components/LinkCard/ShowLinkCard\";\nimport Button from \"../components/Button/Button\";\nimport { Link } from \"react-router-dom\";\n// import Tagcard from \"../components/Tagcard/Tagcard\";\n\nimport \"../components/Layout/main-layout.css\";\nimport RemovedItemsPage from \"./RemovedItemsPage\";\nimport FolderPage from \"./FolderPage\";\nimport BookmarkDetail from \"../components/LinkCard/BookmarkDetail\"; // 상세 정보 컴포넌트 import\n\nconst HomePage = ({ bookmarks, onAddBookmark, onDeleteBookmark }) => {\n  const location = useLocation();\n  const [username, setUsername] = useState(\"\"); //사용자 이름\n  const [mostPopularTags, setMostPopularTags] = useState(\"\");\n  const [loading, setLoading] = useState(true); //로딩 상태\n  const [isMenuOpen, setIsMenuOpen] = useState(false); //사이드메뉴 열림 상태\n  // const [sortingOption, setSortingOption] = useState(\"\");\n  // const [selectedTags, setSelectedTags] = useState([]);\n\n  // 북마크 선택 상태 추가\n  const [selectedBookmark, setSelectedBookmark] = useState(null);\n\n  const renderSection = () => {\n    switch (location.pathname) {\n      case \"/removeditemspage\":\n        return <RemovedItemsPage />;\n      case \"/folderpage\":\n        return (\n          <FolderPage bookmarks={bookmarks} onAddBookmark={handleAddBookmark} />\n        );\n      default:\n        return (\n          <div className=\"main-box\">\n            <h3>안녕하세요, {username}님!</h3>\n\n            <div className=\"link-set\">\n              <div className=\"_text\">\n                <p className=\"_title\">{username}님께 추천하는 링크</p>\n                <Link to=\"/homepage\" className=\"more\">\n                  더보기&gt;\n                </Link>\n              </div>\n              <ShowLinkCard\n                bookmarks={bookmarks}\n                onDelete={handleDelete}\n                onEdit={handleEdit}\n                onLinkCardClick={handleBookmarkClick} // 북마크 클릭 핸들러 전달\n                sideMenuOpen={isMenuOpen}\n                bookmarkDetailOpen={selectedBookmark}\n                // sortingOption={sortingOption}\n              />\n            </div>\n            <div className=\"link-set\">\n              <div className=\"_text\">\n                <p className=\"_title\">최근에 방문한 링크</p>\n                <Link to=\"/homepage\" className=\"more\">\n                  더보기&gt;\n                </Link>\n              </div>\n              <ShowLinkCard\n                bookmarks={bookmarks}\n                onDelete={handleDelete}\n                onEdit={handleEdit}\n                onLinkCardClick={handleBookmarkClick}\n                sideMenuOpen={isMenuOpen}\n                bookmarkDetailOpen={selectedBookmark}\n                // sortingOption={sortingOption}\n              />\n            </div>\n            <div className=\"link-set\">\n              <div className=\"_text\">\n                <p className=\"_title\">\n                  {username}님의 최다 태그\n                  <Button label={mostPopularTags} className=\"tag\" />를 포함한\n                  링크\n                </p>\n                <Link to=\"/homepage\" className=\"more\">\n                  더보기&gt;\n                </Link>\n              </div>\n              <ShowLinkCard\n                bookmarks={bookmarks}\n                onDelete={handleDelete}\n                onEdit={handleEdit}\n                onLinkCardClick={handleBookmarkClick}\n                sideMenuOpen={isMenuOpen}\n                bookmarkDetailOpen={selectedBookmark}\n                // sortingOption={sortingOption}\n              />\n            </div>\n          </div>\n        );\n    }\n  };\n\n  useEffect(() => {\n    const fetchUserInfo = async () => {\n      try {\n        // USER INFO\n        //const userResponse = await fetch(\"/api/user\");\n        //const userData = await userResponse.json();\n        const userData = { nickname: \"000\" };\n        setUsername(userData.nickname);\n\n        // MOST_POPULAR_TAGS\n        // const topTagsResponse = await fetch(\"/api/tags/top\");\n        // const topTagsData = await topTagsResponse.json();\n        const topTagsData = { label: \"탑태그\" };\n        setMostPopularTags(topTagsData.label);\n\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Fail to get user information\", error);\n        setLoading(false);\n      }\n    };\n    fetchUserInfo();\n  }, []);\n\n  const handleDelete = (id) => onDeleteBookmark(id);\n  const handleEdit = (id) => {\n    //추후 수정 기능 코드 추가\n  };\n  const handleAddBookmark = (newBookmark) => {\n    onAddBookmark(newBookmark);\n  };\n\n  const handleBookmarkClick = (bookmark) => {\n    console.log(\"Clicked bookmark:\", bookmark);\n    setSelectedBookmark(bookmark); // 클릭된 북마크 상태 저장\n  };\n\n  const handleBookmarkClose = () => {\n    setSelectedBookmark(null); // 상세 정보를 닫기\n  };\n\n  // TAG\n  // const handleTagSelect = (tag) => {\n  //   if (!selectedTags.includes(tag)) {\n  //     setSelectedTags([...selectedTags, tag]); //태그 추가\n  //   }\n  // };\n  // const handleTagRemove = (tag) => {\n  //   setSelectedTags(selectedTags.filter((t) => t !== tag)); //태그 제거\n  // };\n\n  // SORTING\n  // const handleSortingSelect = (option) => {\n  //   setSortingOption(option);\n  // };\n\n  //SideMenu Toggle\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  return (\n    <div\n      className={`main-page \n        ${isMenuOpen ? \"menu-open\" : \"\"} \n        ${selectedBookmark ? \"show-detail\" : \"\"}`}\n    >\n      <Header toggleMenu={toggleMenu} />\n      <SideMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} />\n      <section>{renderSection()}</section>\n\n      {/* 상세 정보 */}\n      {selectedBookmark && (\n        <div className=\"bookmark-detail-container\">\n          <BookmarkDetail\n            bookmark={selectedBookmark}\n            onEdit={() => console.log(\"Edit clicked\")}\n            onDelete={() => console.log(\"Delete clicked\")}\n            onClose={handleBookmarkClose}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","export const bookmarks = [\n  { id: 1, title: \"Google\", url: \"https://www.google.com\", img: \"example.png\" },\n  {\n    id: 5,\n    title: \"MDN Web Docs\",\n    url: \"https://developer.mozilla.org\",\n    img: \"example.png\",\n  },\n  { id: 6, title: \"React\", url: \"https://reactjs.org\", img: \"example.png\" },\n  {\n    id: 7,\n    title: \"YouTube\",\n    url: \"https://www.youtube.com\",\n    img: \"example.png\",\n  },\n  {\n    id: 8,\n    title: \"스택 프레임 이해하기\",\n    url: \"https://velog.io/@hamham/%EC%8A%A4%ED%83%9D%ED%94%84%EB%A0%88%EC%9E%84-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\",\n    img: \"example.png\",\n  },\n  {\n    id: 9,\n    title: \"URL이 두줄인데 제목도 두줄까지 길어진다면\",\n    url: \"https://www.kw.ac.kr/ko/life/notice.jsp?BoardMode=view&DUID=47837&tpage=1&searchKey=1&searchVal=&srCategoryId=\",\n    img: \"example.png\",\n  },\n  {\n    id: 12,\n    title: \"나의 ex..컬러버스<3\",\n    url: \"https://www.mk.co.kr/news/it/10882354\",\n    img: \"example.png\",\n  },\n  {\n    id: 13,\n    title: \"고슴도치의 가시는 털일까?\",\n    url: \"https://m.blog.naver.com/dnjsifjqjd/221181323254\",\n    img: \"example.png\",\n  },\n];\n","import React from \"react\";\n\nconst TermsPage = () => {\n  return (\n    <div>\n      <p>이용약관</p>\n    </div>\n  );\n};\n\nexport default TermsPage;\n","import React from \"react\";\n\nconst PrivacyPolicy = () => {\n  return (\n    <div>\n      <p>개인정보처리방침</p>\n    </div>\n  );\n};\n\nexport default PrivacyPolicy;\n","import React, { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\"; // 라우터 import\nimport LandingPage from \"./pages/LandingPage\";\nimport SignPage from \"./pages/SignPage\";\n//import OnBoardingPage from \"./pages/OnBoardingPage\";\nimport HomePage from \"./pages/HomePage\";\nimport FolderPage from \"./pages/FolderPage\";\nimport RemovedItemsPage from \"./pages/RemovedItemsPage\";\nimport { bookmarks as initialBookmarks } from \"./components/LinkCard/bookmarks\";\nimport TermsPage from \"./pages/TermsPage\";\nimport PrivacyPolicy from \"./pages/PrivacyPolicy\";\nimport Typography from \"./styles/Typography/Typography\";\n\nimport \"./App.css\";\nimport \"./styles/color.css\";\n\nfunction App() {\n  const [bookmarks, setBookmarks] = useState(initialBookmarks);\n\n  const handleAddBookmark = (newBookmark) => {\n    setBookmarks((prevBookmarks) => [\n      ...prevBookmarks,\n      { id: Date.now(), ...newBookmark },\n    ]);\n  };\n  const handleDeleteBookmark = (id) => {\n    setBookmarks((prevBookmarks) => prevBookmarks.filter((b) => b.id !== id));\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<LandingPage />} />\n      <Route path=\"/signpage\" element={<SignPage />} />\n      <Route path=\"/termspage\" element={<TermsPage />} />\n      <Route path=\"/privacypolicy\" element={<PrivacyPolicy />} />\n\n      <Route\n        path=\"/homepage\"\n        element={\n          <HomePage\n            bookmarks={bookmarks}\n            onAddBookmark={handleAddBookmark}\n            onDeleteBookmark={handleDeleteBookmark}\n          />\n        }\n      />\n\n      <Route\n        path=\"/folderpage\"\n        element={\n          <FolderPage\n            bookmarks={bookmarks}\n            onAddBookmark={handleAddBookmark}\n            onDeleteBookmark={handleDeleteBookmark}\n          />\n        }\n      />\n      <Route\n        path=\"/removeditemspage\"\n        element={\n          <RemovedItemsPage\n            bookmarks={bookmarks}\n            onAddBookmark={handleAddBookmark}\n            onDeleteBookmark={handleDeleteBookmark}\n          />\n        }\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom'; // Router를 index.js에서 사용\nimport App from './App';\nimport './styles/Typography/Typography.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}